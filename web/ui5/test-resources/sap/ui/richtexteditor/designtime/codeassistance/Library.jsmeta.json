{"!name":"sap.ui.richtexteditor","!version":"1.17.0","!define":{"sap.ui.richtexteditor.RichTextEditor_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.richtexteditor.RichTextEditor with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.richtexteditor.RichTextEditor"},"sap.ui.richtexteditor.EditorType":{"!description":"Determines which editor component should be used for editing the text.","TinyMCE":{"!description":"Uses TinyMCE version 3 as editor (default)","!category":"enum","!type":"String"},"!module":"sap/ui/richtexteditor/library","TinyMCE4":{"!description":"Uses TinyMCE version 4 as editor","!category":"enum","!type":"String"},"!category":"static class"},"sap":{"sap":"sap","ui":"sap.ui","!category":"namespace"},"sap.ui":{"richtexteditor":"sap.ui.richtexteditor","!category":"namespace"},"sap.ui.richtexteditor":{"showGroupLink":{"!description":"Whether the toolbar button group containing commands like Create Link and Remove Link is available. Changing this after the initial rendering will result in some visible redrawing.","!category":"enum","!type":"Boolean"},"plugins":{"!description":"An array of plugin configuration objects with the obligatory property \"name\".\nEach object has to contain a property \"name\" which then contains the plugin name/ID.","!category":"enum","!type":"[Object]"},"!category":"namespace","showGroupInsert":{"!description":"Whether the toolbar button group containing commands like Insert Image and Insert Smiley is available. Changing this after the initial rendering will result in some visible redrawing.","!category":"enum","!type":"Boolean"},"required":{"!description":"Whether a value is required.","!category":"enum","!type":"Boolean"},"textDirection":{"!description":"The text direction","!category":"enum","!type":"sap.ui.core.TextDirection"},"showGroupFontStyle":{"!description":"Whether the toolbar button group containing commands like Bold, Italic, Underline and Strikethrough is available. Changing this after the initial rendering will result in some visible redrawing.","!category":"enum","!type":"Boolean"},"showGroupClipboard":{"!description":"Whether the toolbar button group containing commands like Cut, Copy and Paste is available. Changing this after the initial rendering will result in some visible redrawing.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"RichTextEditor":"sap.ui.richtexteditor.RichTextEditor_obj","value":{"!description":"An HTML string representing the editor content. Because this is HTML, the value cannot be generically escaped to prevent cross-site scripting, so the application is responsible for doing so.\nOverwriting this property would also reset editor's Undo manager and buttons \"Undo\"/\"Redo\" would be set to their initial state.","!category":"enum","!type":"String"},"height":{"!description":"Height of RichTextEditor control in CSS units.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"A rich text editor (RTE) control. Requires installation of an additional rich text editor library.","sanitizeValue":{"!description":"Whether to run the HTML sanitizer once the value (HTML markup) is applied or not. To configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"showGroupUndo":{"!description":"Whether the toolbar button group containing commands like Undo and Redo is available. Changing this after the initial rendering will result in some visible redrawing.","!category":"enum","!type":"Boolean"},"useLegacyTheme":{"!description":"Whether or not to use the legacy theme for the toolbar buttons. If this is set to false, the default theme for the editor will be used (which might change slightly with every update). The legacy theme has the disadvantage that not all functionality has its own icon, so using non default buttons might lead to invisible buttons with the legacy theme - use the default editor theme in this case.","!category":"enum","!type":"Boolean"},"buttonGroups":{"!description":"An array of button configurations. These configurations contain the names of buttons as array in the property \"buttons\" and the name of the group in \"name\", they can also contain the \"row\" where the buttons should be placed, a \"priority\" and whether the buttons are \"visible\". See method addButtonGroup() for more details on the structure of the objects in this array.","!category":"enum","!type":"[Object]"},"editable":{"!description":"Whether the editor content can be modified by the user. When set to \"false\" there might not be any editor toolbar.","!category":"enum","!type":"Boolean"},"EditorType":"sap.ui.richtexteditor.EditorType","editorLocation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25.0 The editorLocation is set implicitly when choosing the editorType.<br>Relative or absolute URL where the editor is available. Must be on the same server.\nAny attempts to set this property after the first rendering will not have any effect.","!category":"enum","!type":"String"},"showGroupFont":{"!description":"Whether the toolbar button group containing commands like Font, Font Size and Colors is available. Changing this after the initial rendering will result in some visible redrawing.","!category":"enum","!type":"Boolean"},"wrapping":{"!description":"Whether the text in the editor is wrapped. This does not affect the editor's value, only the representation in the control.","!category":"enum","!type":"Boolean"},"showGroupStructure":{"!description":"Whether the toolbar button group containing commands like Bullets and Indentation is available. Changing this after the initial rendering will result in some visible redrawing.","!category":"enum","!type":"Boolean"},"!module":"sap/ui/richtexteditor/library","!helpDescription":"A rich text editor (RTE) control. Requires installation of an additional rich text editor library.","showGroupTextAlign":{"!description":"Whether the toolbar button group containing text alignment commands is available. Changing this after the initial rendering will result in some visible redrawing.","!category":"enum","!type":"Boolean"},"width":{"!description":"Width of RichTextEditor control in CSS units.","!category":"enum","!type":"sap.ui.core.CSSSize"},"editorType":{"!description":"The editor implementation to use.\nValid values are the ones found under sap.ui.richtexteditor.EditorType and any other editor identifier that may be introduced by other groups (hence this is not an enumeration).\nAny attempts to set this property after the first rendering will not have any effect.","!category":"enum","!type":"String"}},"sap.ui.richtexteditor.RichTextEditor":{"getShowGroupFont":{"!description":"Gets current value of property <code>showGroupFont<\/code>.\n\nWhether the toolbar button group containing commands like Font, Font Size and Colors is available. Changing this after the initial rendering will result in some visible redrawing.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setRequired":{"!description":"Sets a new value for property <code>required<\/code>.\n\nWhether a value is required.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"detachReady":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>ready<\/code> event of this <code>sap.ui.richtexteditor.RichTextEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nWhether the editor content can be modified by the user. When set to \"false\" there might not be any editor toolbar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.ui.richtexteditor.RichTextEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowGroupUndo":{"!description":"Gets current value of property <code>showGroupUndo<\/code>.\n\nWhether the toolbar button group containing commands like Undo and Redo is available. Changing this after the initial rendering will result in some visible redrawing.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUseLegacyTheme":{"!description":"Allows to opt out of the legacy theme that is applied to keep the old button look. In case\nbutons are used that are not in the legacy theme, this can be disabled in order to show\nthe button correctly.","!static":false,"!category":"function","!type":"fn(bUseLegacyTheme?: Boolean) -> Object","parameters":{"bUseLegacyTheme":"type: boolean, description: Whether to use the legacy button theme"}},"getShowGroupInsert":{"!description":"Gets current value of property <code>showGroupInsert<\/code>.\n\nWhether the toolbar button group containing commands like Insert Image and Insert Smiley is available. Changing this after the initial rendering will result in some visible redrawing.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowGroupInsert":{"!description":"Sets a new value for property <code>showGroupInsert<\/code>.\n\nWhether the toolbar button group containing commands like Insert Image and Insert Smiley is available. Changing this after the initial rendering will result in some visible redrawing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupInsert: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bShowGroupInsert":"type: boolean, description: New value for property <code>showGroupInsert<\/code>"}},"getShowGroupClipboard":{"!description":"Gets current value of property <code>showGroupClipboard<\/code>.\n\nWhether the toolbar button group containing commands like Cut, Copy and Paste is available. Changing this after the initial rendering will result in some visible redrawing.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setButtonGroups":{"!description":"Sets a new value for property <code>buttonGroups<\/code>.\n\nAn array of button configurations. These configurations contain the names of buttons as array in the property \"buttons\" and the name of the group in \"name\", they can also contain the \"row\" where the buttons should be placed, a \"priority\" and whether the buttons are \"visible\". See method addButtonGroup() for more details on the structure of the objects in this array.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sButtonGroups: [Object]) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"sButtonGroups":"type: object[], description: New value for property <code>buttonGroups<\/code>"}},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nWhether the text in the editor is wrapped. This does not affect the editor's value, only the representation in the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bWrapping: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bWrapping":"type: boolean, description: New value for property <code>wrapping<\/code>"}},"setShowGroupFontStyle":{"!description":"Sets a new value for property <code>showGroupFontStyle<\/code>.\n\nWhether the toolbar button group containing commands like Bold, Italic, Underline and Strikethrough is available. Changing this after the initial rendering will result in some visible redrawing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupFontStyle: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bShowGroupFontStyle":"type: boolean, description: New value for property <code>showGroupFontStyle<\/code>"}},"getNativeApi":{"!description":"Returns the current editor's instance.\nCAUTION: using the native editor introduces a dependency to that editor and breaks the wrapping character of the RichTextEditor control, so it should only be done in justified cases.","!static":false,"!category":"function","!type":"fn() -> Object"},"getPlugins":{"!description":"Gets current value of property <code>plugins<\/code>.\n\nAn array of plugin configuration objects with the obligatory property \"name\".\nEach object has to contain a property \"name\" which then contains the plugin name/ID.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"getShowGroupFontStyle":{"!description":"Gets current value of property <code>showGroupFontStyle<\/code>.\n\nWhether the toolbar button group containing commands like Bold, Italic, Underline and Strikethrough is available. Changing this after the initial rendering will result in some visible redrawing.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSanitizeValue":{"!description":"Gets current value of property <code>sanitizeValue<\/code>.\n\nWhether to run the HTML sanitizer once the value (HTML markup) is applied or not. To configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUseLegacyTheme":{"!description":"Gets current value of property <code>useLegacyTheme<\/code>.\n\nWhether or not to use the legacy theme for the toolbar buttons. If this is set to false, the default theme for the editor will be used (which might change slightly with every update). The legacy theme has the disadvantage that not all functionality has its own icon, so using non default buttons might lead to invisible buttons with the legacy theme - use the default editor theme in this case.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"The RichTextEditor-Control is used to enter formatted text.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.richtexteditor.RichTextEditor.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThe text direction\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"attachReady":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>ready<\/code> event of this <code>sap.ui.richtexteditor.RichTextEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.richtexteditor.RichTextEditor<\/code> itself.\n\nFired when the used editor is loaded and ready (its HTML is also created).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.richtexteditor.RichTextEditor<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.ui.richtexteditor.RichTextEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.richtexteditor.RichTextEditor<\/code> itself.\n\nEvent is fired when the text in the field has changed AND the focus leaves the editor or when the Enter key is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.richtexteditor.RichTextEditor<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue<\/code> of type <code>string<\/code>The new control value.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of RichTextEditor control in CSS units.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"detachBeforeEditorInit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeEditorInit<\/code> event of this <code>sap.ui.richtexteditor.RichTextEditor<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.ui.richtexteditor.RichTextEditor with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setShowGroupTextAlign":{"!description":"Sets a new value for property <code>showGroupTextAlign<\/code>.\n\nWhether the toolbar button group containing text alignment commands is available. Changing this after the initial rendering will result in some visible redrawing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupTextAlign: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bShowGroupTextAlign":"type: boolean, description: New value for property <code>showGroupTextAlign<\/code>"}},"!module":"sap/ui/richtexteditor/RichTextEditor","!helpDescription":"The RichTextEditor-Control is used to enter formatted text.","getShowGroupStructure":{"!description":"Gets current value of property <code>showGroupStructure<\/code>.\n\nWhether the toolbar button group containing commands like Bullets and Indentation is available. Changing this after the initial rendering will result in some visible redrawing.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPlugins":{"!description":"Sets a new value for property <code>plugins<\/code>.\n\nAn array of plugin configuration objects with the obligatory property \"name\".\nEach object has to contain a property \"name\" which then contains the plugin name/ID.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sPlugins: [Object]) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"sPlugins":"type: object[], description: New value for property <code>plugins<\/code>"}},"setShowGroupFont":{"!description":"Sets a new value for property <code>showGroupFont<\/code>.\n\nWhether the toolbar button group containing commands like Font, Font Size and Colors is available. Changing this after the initial rendering will result in some visible redrawing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupFont: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bShowGroupFont":"type: boolean, description: New value for property <code>showGroupFont<\/code>"}},"fireReady":{"!description":"Fires event <code>ready<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getEditorType":{"!description":"Gets current value of property <code>editorType<\/code>.\n\nThe editor implementation to use.\nValid values are the ones found under sap.ui.richtexteditor.EditorType and any other editor identifier that may be introduced by other groups (hence this is not an enumeration).\nAny attempts to set this property after the first rendering will not have any effect.\n\nDefault value is <code>TinyMCE<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireBeforeEditorInit":{"!description":"Fires event <code>beforeEditorInit<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nWhether the text in the editor is wrapped. This does not affect the editor's value, only the representation in the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","addPlugin":{"!description":"Allows to add plugins (that must already be installed on the server) to the\nRichtextEditor.","!static":false,"!category":"function","!type":"fn(mPlugin?: map | String) -> Object","parameters":{"mPlugin":"type: map|string, description: A map with the property name containing the plugin IDs/name or an object with the property \"name\"."}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of RichTextEditor control in CSS units.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowGroupLink":{"!description":"Sets a new value for property <code>showGroupLink<\/code>.\n\nWhether the toolbar button group containing commands like Create Link and Remove Link is available. Changing this after the initial rendering will result in some visible redrawing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupLink: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bShowGroupLink":"type: boolean, description: New value for property <code>showGroupLink<\/code>"}},"setShowGroupClipboard":{"!description":"Sets a new value for property <code>showGroupClipboard<\/code>.\n\nWhether the toolbar button group containing commands like Cut, Copy and Paste is available. Changing this after the initial rendering will result in some visible redrawing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupClipboard: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bShowGroupClipboard":"type: boolean, description: New value for property <code>showGroupClipboard<\/code>"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of RichTextEditor control in CSS units.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new RichTextEditor.\n\nThe RichTextEditor uses a third party component, which might in some cases not be\ncompletely compatible with the way UI5's (re-)rendering mechanism works. If you keep hidden\ninstances of the control (instances which are not visible in the DOM), you might run into\nproblems with some browser versions. In this case please make sure you destroy the\nRichTextEditor instance instead of hiding it and create a new one when you show it again.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEditorType editorType} : string (default: TinyMCE)<\/li>\n<li>{@link #getEditorLocation editorLocation} : string (default: js/tiny_mce/tiny_mce_src.js)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupFontStyle showGroupFontStyle} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupTextAlign showGroupTextAlign} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupStructure showGroupStructure} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupFont showGroupFont} : boolean (default: false)<\/li>\n<li>{@link #getShowGroupClipboard showGroupClipboard} : boolean (default: true)<\/li>\n<li>{@link #getShowGroupInsert showGroupInsert} : boolean (default: false)<\/li>\n<li>{@link #getShowGroupLink showGroupLink} : boolean (default: false)<\/li>\n<li>{@link #getShowGroupUndo showGroupUndo} : boolean (default: false)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getSanitizeValue sanitizeValue} : boolean (default: true)<\/li>\n<li>{@link #getPlugins plugins} : object[] (default: [])<\/li>\n<li>{@link #getUseLegacyTheme useLegacyTheme} : boolean (default: true)<\/li>\n<li>{@link #getButtonGroups buttonGroups} : object[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:ready ready} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeEditorInit beforeEditorInit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addButtonGroup":{"!description":"Adds a button group to the editor.","!static":false,"!category":"function","!type":"fn(mGroup?: map | String) -> Object","parameters":{"mGroup":"type: map|string, description: Name/ID of a single button or map containing the group information"}},"setSanitizeValue":{"!description":"Sets a new value for property <code>sanitizeValue<\/code>.\n\nWhether to run the HTML sanitizer once the value (HTML markup) is applied or not. To configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSanitizeValue: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bSanitizeValue":"type: boolean, description: New value for property <code>sanitizeValue<\/code>"}},"getShowGroupLink":{"!description":"Gets current value of property <code>showGroupLink<\/code>.\n\nWhether the toolbar button group containing commands like Create Link and Remove Link is available. Changing this after the initial rendering will result in some visible redrawing.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowGroupUndo":{"!description":"Sets a new value for property <code>showGroupUndo<\/code>.\n\nWhether the toolbar button group containing commands like Undo and Redo is available. Changing this after the initial rendering will result in some visible redrawing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupUndo: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bShowGroupUndo":"type: boolean, description: New value for property <code>showGroupUndo<\/code>"}},"attachBeforeEditorInit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeEditorInit<\/code> event of this <code>sap.ui.richtexteditor.RichTextEditor<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.ui.richtexteditor.RichTextEditor<\/code> itself.\n\nThis event is fired right before the TinyMCE instance is created and can be used to change the settings object that will be given to TinyMCE. The parameter \"configuration\" is the javascript oject that will be given to TinyMCE upon first instantiation. The configuration parameter contains a map that can be changed in the case of TinyMCE.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.richtexteditor.RichTextEditor<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getButtonGroups":{"!description":"Gets current value of property <code>buttonGroups<\/code>.\n\nAn array of button configurations. These configurations contain the names of buttons as array in the property \"buttons\" and the name of the group in \"name\", they can also contain the \"row\" where the buttons should be placed, a \"priority\" and whether the buttons are \"visible\". See method addButtonGroup() for more details on the structure of the objects in this array.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"setEditorType":{"!description":"Switches the editor type and sets the default settings for the editor.\nAll plugins and button groups should be set after this has been invoked","!static":false,"!category":"function","!type":"fn(sEditorType?: String) -> Object","parameters":{"sEditorType":"type: string, description: Which editor type to be used (currently only TinyMCE 3 and 4)"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of RichTextEditor control in CSS units.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nAn HTML string representing the editor content. Because this is HTML, the value cannot be generically escaped to prevent cross-site scripting, so the application is responsible for doing so.\nOverwriting this property would also reset editor's Undo manager and buttons \"Undo\"/\"Redo\" would be set to their initial state.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowGroupTextAlign":{"!description":"Gets current value of property <code>showGroupTextAlign<\/code>.\n\nWhether the toolbar button group containing text alignment commands is available. Changing this after the initial rendering will result in some visible redrawing.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEditorLocation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25.0 The editorLocation is set implicitly when choosing the editorType.<br>Sets a new value for property <code>editorLocation<\/code>.\n\nRelative or absolute URL where the editor is available. Must be on the same server.\nAny attempts to set this property after the first rendering will not have any effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>js/tiny_mce/tiny_mce_src.js<\/code>.","!static":false,"!category":"function","!type":"fn(sEditorLocation: String) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"sEditorLocation":"type: string, description: New value for property <code>editorLocation<\/code>"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nWhether the editor content can be modified by the user. When set to \"false\" there might not be any editor toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nAn HTML string representing the editor content. Because this is HTML, the value cannot be generically escaped to prevent cross-site scripting, so the application is responsible for doing so.\nOverwriting this property would also reset editor's Undo manager and buttons \"Undo\"/\"Redo\" would be set to their initial state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"getEditorLocation":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.25.0 The editorLocation is set implicitly when choosing the editorType.<br>Gets current value of property <code>editorLocation<\/code>.\n\nRelative or absolute URL where the editor is available. Must be on the same server.\nAny attempts to set this property after the first rendering will not have any effect.\n\nDefault value is <code>js/tiny_mce/tiny_mce_src.js<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowGroupStructure":{"!description":"Sets a new value for property <code>showGroupStructure<\/code>.\n\nWhether the toolbar button group containing commands like Bullets and Indentation is available. Changing this after the initial rendering will result in some visible redrawing.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowGroupStructure: Boolean) -> sap.ui.richtexteditor.RichTextEditor","parameters":{"bShowGroupStructure":"type: boolean, description: New value for property <code>showGroupStructure<\/code>"}},"getRequired":{"!description":"Gets current value of property <code>required<\/code>.\n\nWhether a value is required.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThe text direction\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}}}}