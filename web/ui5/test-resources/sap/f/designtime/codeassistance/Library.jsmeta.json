{"!name":"sap.f","!version":"1.20.0","!define":{"sap.f.FlexibleColumnLayoutSemanticHelper_obj":{"!type":"fn(oFlexibleColumnLayout: sap.f.FlexibleColumnLayout, oSettings: Object)","prototype":"sap.f.FlexibleColumnLayoutSemanticHelper"},"sap.f.semantic.CloseAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.CloseAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.CloseAction"},"sap.f.AvatarType":{"!description":"Types of {@link sap.f.Avatar} based on the displayed content.","!module":"sap/f/library","!category":"static class","Icon":{"!description":"The displayed content is an icon.","!category":"enum","!type":"String"},"Image":{"!description":"The displayed content is an image.","!category":"enum","!type":"String"},"Initials":{"!description":"The displayed content is initials.","!category":"enum","!type":"String"}},"sap.f.DynamicPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPage"},"sap.f.routing.Router_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.Router with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oRoutes?: [Object | Object], oOwner?: sap.ui.core.UIComponent, oTargetsConfig?: Object)","prototype":"sap.f.routing.Router"},"sap.f.semantic.AddAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.AddAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.AddAction"},"sap.f.semantic.PositiveAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.PositiveAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.PositiveAction"},"sap.f.semantic.SemanticPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticPage"},"sap.f.FlexibleColumnLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.FlexibleColumnLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.FlexibleColumnLayout"},"sap.f.routing":{"TargetHandler":"sap.f.routing.TargetHandler_obj","Router":"sap.f.routing.Router_obj","Targets":"sap.f.routing.Targets_obj","!category":"namespace"},"sap.f.semantic.DiscussInJamAction":{"!description":"A semantic-specific button, eligible for the <code>discussInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.DiscussInJamAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.DiscussInJamAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>DiscussInJamAction<\/code>.","!module":"sap/f/semantic/DiscussInJamAction","!helpDescription":"A semantic-specific button, eligible for the <code>discussInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.SendEmailAction":{"!description":"A semantic-specific button, eligible for the <code>sendEmailAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendEmailAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SendEmailAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SendEmailAction<\/code>.","!module":"sap/f/semantic/SendEmailAction","!helpDescription":"A semantic-specific button, eligible for the <code>sendEmailAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.DynamicPageHeader":{"!description":"Header of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageHeader<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageHeader<\/code> can hold any layout control and has two states - expanded and collapsed (snapped). The switching between these states happens when:\n\n<ul><li>the user scrolls below its bottom margin<\/li> <li>the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}<\/li> <li>through the {@link sap.f.DynamicPage DynamicPage} property <code>headerExpanded<\/code><\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageHeader<\/code> depends on the behavior of the content that is displayed.","setPinnable":{"!description":"Sets a new value for property {@link #getPinnable pinnable}.\n\nDetermines whether the header is pinnable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bPinnable: Boolean) -> sap.f.DynamicPageHeader","parameters":{"bPinnable":"type: boolean, description: New value for property <code>pinnable<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPageHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content of the header.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.DynamicPageHeader","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>DynamicPageHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPinnable pinnable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/f/DynamicPageHeader","!helpDescription":"Header of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageHeader<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageHeader<\/code> can hold any layout control and has two states - expanded and collapsed (snapped). The switching between these states happens when:\n\n<ul><li>the user scrolls below its bottom margin<\/li> <li>the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}<\/li> <li>through the {@link sap.f.DynamicPage DynamicPage} property <code>headerExpanded<\/code><\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageHeader<\/code> depends on the behavior of the content that is displayed.","getPinnable":{"!description":"Gets current value of property {@link #getPinnable pinnable}.\n\nDetermines whether the header is pinnable.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageHeader","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageHeader"}},"sap.f.semantic.ShareInJamAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.ShareInJamAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.ShareInJamAction"},"sap.f.FlexibleColumnLayout":{"setDefaultTransitionNameBeginColumn":{"!description":"Sets a new value for property {@link #getDefaultTransitionNameBeginColumn defaultTransitionNameBeginColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameBeginColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameBeginColumn":"type: string, description: New value for property <code>defaultTransitionNameBeginColumn<\/code>"}},"backToPage":{"!description":"Navigates back to a page in the <code>FlexibleColumnLayout<\/code>. Columns are scanned for the page in the following order: <code>Begin<\/code>, <code>Mid<\/code>, <code>End<\/code>.\n\nCalling this navigation method, first triggers the (cancelable) navigate event on the SplitContainer, then the beforeHide pseudo event on the source page, beforeFirstShow (if applicable), and beforeShow on the target page. Later, after the transition has completed, the afterShow pseudo event is triggered on the target page and afterHide - on the page, which has been left. The given backData object is available in the beforeFirstShow, beforeShow, and afterShow event objects as data property. The original \"data\" object from the \"to\" navigation is also available in these event objects.","!static":false,"!category":"function","!type":"fn(sPageId: String, oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\nIn order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","sPageId":"type: string, description: The screen to which is being navigated to. The ID or the control itself can be given.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as backData property. (the original data from the to() navigation will still be available as data property).\n\nIn scenarios, where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.\n\nWhen the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."}},"getDefaultTransitionNameEndColumn":{"!description":"Gets current value of property {@link #getDefaultTransitionNameEndColumn defaultTransitionNameEndColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setInitialEndColumnPage":{"!description":"Sets the associated {@link #getInitialEndColumnPage initialEndColumnPage}.","!static":false,"!category":"function","!type":"fn(oInitialEndColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialEndColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialEndColumnPage association; alternatively, an element instance may be given"}},"setLayout":{"!description":"Sets a new value for property {@link #getLayout layout}.\n\nDetermines the layout of the control - number of visible columns and their relative sizes.\n\nFor more details, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>OneColumn<\/code>.","!static":false,"!category":"function","!type":"fn(sLayout: sap.f.LayoutType) -> sap.f.FlexibleColumnLayout","parameters":{"sLayout":"type: sap.f.LayoutType, description: New value for property <code>layout<\/code>"}},"backToTopBeginColumn":{"!description":"Navigates back to the initial/top level of Begin column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\nIn order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\nIn scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\nWhen the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"detachEndColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:endColumnNavigate endColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllBeginColumnPages":{"!description":"Removes all the controls from the aggregation {@link #getBeginColumnPages beginColumnPages}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireAfterEndColumnNavigate":{"!description":"Fires event {@link #event:afterEndColumnNavigate afterEndColumnNavigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"fireEndColumnNavigate":{"!description":"Fires event {@link #event:endColumnNavigate endColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getMaxColumnsCount":{"!description":"Returns the maximum number of columns that can be displayed at once based on the control width","!static":false,"!category":"function","!type":"fn() -> Number"},"setInitialBeginColumnPage":{"!description":"Sets the associated {@link #getInitialBeginColumnPage initialBeginColumnPage}.","!static":false,"!category":"function","!type":"fn(oInitialBeginColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialBeginColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialBeginColumnPage association; alternatively, an element instance may be given"}},"removeAllMidColumnPages":{"!description":"Removes all the controls from the aggregation {@link #getMidColumnPages midColumnPages}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.\n\n<h3>Overview<\/h3>\n\nThe control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling three columns (referred to as <code>Begin<\/code>, <code>Mid<\/code> and <code>End<\/code>) rather than two (<code>Master<\/code>, <code>Detail<\/code>). The width of the three columns is variable.\n\nThere are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.\n\nInternally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.\n\n<h3>Usage<\/h3>\n\nUse this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.). The control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.\n\nThe columns are accessible with the <code>beginColumnPages<\/code>, <code>midColumnPages<\/code> and <code>endColumnPages<\/code> aggregations.\n\nThe relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.\n\nChanges to the layout due to user interaction are communicated to the app with the <code>stateChange<\/code> event.\n\n<ul><b>Notes:<\/b> <li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app, you can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class.<\/li> <li>To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} <\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe control automatically displays the maximum possible number of columns based on the device size and current <code>layout<\/code>. The app does not need to take into consideration the current device/screen size, but only to add content to the columns and change the value of the <code>layout<\/code> property.\n\nFor detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.","getMetadata":{"!description":"Returns a metadata object for class sap.f.FlexibleColumnLayout.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachStateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:stateChange stateChange} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachAfterMidColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterMidColumnNavigate afterMidColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachStateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:stateChange stateChange} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFired when there is a change in the <code>layout<\/code> property or in the maximum number of columns that can be displayed at once. <br/><\/br> <ul>The interactions that may lead to a state change are: <li>the property <code>layout<\/code> was changed indirectly by the user clicking a layout arrow<\/li> <li>the user resized the browser beyond a breakpoint, thus changing the maximum number of columns that can be displayed at once.<\/li><\/ul> <br/><br/> <b>Note: <\/b>The event is suppressed while the control has zero width and will be fired the first time it gets a non-zero width","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDefaultTransitionNameBeginColumn":{"!description":"Gets current value of property {@link #getDefaultTransitionNameBeginColumn defaultTransitionNameBeginColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllEndColumnPages":{"!description":"Removes all the controls from the aggregation {@link #getEndColumnPages endColumnPages}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"indexOfBeginColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getBeginColumnPages beginColumnPages}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control) -> Number","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: The beginColumnPage whose index is looked for"}},"indexOfEndColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getEndColumnPages endColumnPages}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control) -> Number","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: The endColumnPage whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.f.FlexibleColumnLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getDefaultTransitionNameMidColumn":{"!description":"Gets current value of property {@link #getDefaultTransitionNameMidColumn defaultTransitionNameMidColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"toMidColumnPage":{"!description":"Navigates to a given Mid column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right). Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\nNone of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\nUse case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\nWhen the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\nFor a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"removeBeginColumnPage":{"!description":"Removes a beginColumnPage from the aggregation {@link #getBeginColumnPages beginColumnPages}.","!static":false,"!category":"function","!type":"fn(vBeginColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vBeginColumnPage":"type: int|string|sap.ui.core.Control, description: The beginColumnPage to remove or its index or id"}},"!module":"sap/f/FlexibleColumnLayout","fireMidColumnNavigate":{"!description":"Fires event {@link #event:midColumnNavigate midColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"!helpDescription":"Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.\n\n<h3>Overview<\/h3>\n\nThe control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling three columns (referred to as <code>Begin<\/code>, <code>Mid<\/code> and <code>End<\/code>) rather than two (<code>Master<\/code>, <code>Detail<\/code>). The width of the three columns is variable.\n\nThere are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.\n\nInternally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.\n\n<h3>Usage<\/h3>\n\nUse this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.). The control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.\n\nThe columns are accessible with the <code>beginColumnPages<\/code>, <code>midColumnPages<\/code> and <code>endColumnPages<\/code> aggregations.\n\nThe relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.\n\nChanges to the layout due to user interaction are communicated to the app with the <code>stateChange<\/code> event.\n\n<ul><b>Notes:<\/b> <li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app, you can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class.<\/li> <li>To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} <\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe control automatically displays the maximum possible number of columns based on the device size and current <code>layout<\/code>. The app does not need to take into consideration the current device/screen size, but only to add content to the columns and change the value of the <code>layout<\/code> property.\n\nFor detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.","insertMidColumnPage":{"!description":"Inserts a midColumnPage into the aggregation {@link #getMidColumnPages midColumnPages}.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: The midColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the midColumnPage should be inserted at; for a negative value of <code>iIndex<\/code>, the midColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the midColumnPage is inserted at the last position"}},"destroyMidColumnPages":{"!description":"Destroys all the midColumnPages in the aggregation {@link #getMidColumnPages midColumnPages}.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"getEndColumnPages":{"!description":"Gets content of aggregation {@link #getEndColumnPages endColumnPages}.\n\nThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>End<\/code> column.\n\nThese should be any control with page semantics. These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getBeginColumnPages":{"!description":"Gets content of aggregation {@link #getBeginColumnPages beginColumnPages}.\n\nThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>Begin<\/code> column.\n\nThese should be any control with page semantics. These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachBeginColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beginColumnNavigate beginColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>Begin<\/code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireStateChange":{"!description":"Fires event {@link #event:stateChange stateChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachMidColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:midColumnNavigate midColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addMidColumnPage":{"!description":"Adds some midColumnPage to the aggregation {@link #getMidColumnPages midColumnPages}.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: The midColumnPage to add; if empty, nothing is inserted"}},"getCurrentEndColumnPage":{"!description":"Returns the currently displayed End column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","fireAfterMidColumnNavigate":{"!description":"Fires event {@link #event:afterMidColumnNavigate afterMidColumnNavigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getBackgroundDesign":{"!description":"Gets current value of property {@link #getBackgroundDesign backgroundDesign}.\n\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property {@link #getBackgroundDesign backgroundDesign}.\n\nSpecifies the background color of the content. The visualization of the different options depends on the used theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.f.FlexibleColumnLayout","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"backToTopMidColumn":{"!description":"Navigates back to the initial/top level of Mid column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\nIn order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\nIn scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\nWhen the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"!category":"class","insertBeginColumnPage":{"!description":"Inserts a beginColumnPage into the aggregation {@link #getBeginColumnPages beginColumnPages}.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: The beginColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the beginColumnPage should be inserted at; for a negative value of <code>iIndex<\/code>, the beginColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the beginColumnPage is inserted at the last position"}},"getInitialBeginColumnPage":{"!description":"ID of the element which is the current target of the association {@link #getInitialBeginColumnPage initialBeginColumnPage}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"destroyEndColumnPages":{"!description":"Destroys all the endColumnPages in the aggregation {@link #getEndColumnPages endColumnPages}.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"getLayout":{"!description":"Gets current value of property {@link #getLayout layout}.\n\nDetermines the layout of the control - number of visible columns and their relative sizes.\n\nFor more details, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.\n\nDefault value is <code>OneColumn<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.LayoutType"},"!constructorDescription":"Constructor for a new <code>sap.f.FlexibleColumnLayout<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLayout layout} : sap.f.LayoutType (default: OneColumn)<\/li>\n<li>{@link #getDefaultTransitionNameBeginColumn defaultTransitionNameBeginColumn} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameMidColumn defaultTransitionNameMidColumn} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameEndColumn defaultTransitionNameEndColumn} : string (default: slide)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBeginColumnPages beginColumnPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getMidColumnPages midColumnPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getEndColumnPages endColumnPages} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialBeginColumnPage initialBeginColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialMidColumnPage initialMidColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialEndColumnPage initialEndColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stateChange stateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beginColumnNavigate beginColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:midColumnNavigate midColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMidColumnNavigate afterMidColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:endColumnNavigate endColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterEndColumnNavigate afterEndColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachAfterMidColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterMidColumnNavigate afterMidColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>Mid<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getInitialEndColumnPage":{"!description":"ID of the element which is the current target of the association {@link #getInitialEndColumnPage initialEndColumnPage}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"attachAfterBeginColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>Begin<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachEndColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:endColumnNavigate endColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>End<\/code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeMidColumnPage":{"!description":"Removes a midColumnPage from the aggregation {@link #getMidColumnPages midColumnPages}.","!static":false,"!category":"function","!type":"fn(vMidColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vMidColumnPage":"type: int|string|sap.ui.core.Control, description: The midColumnPage to remove or its index or id"}},"getInitialMidColumnPage":{"!description":"ID of the element which is the current target of the association {@link #getInitialMidColumnPage initialMidColumnPage}, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ID"},"backToTopEndColumn":{"!description":"Navigates back to the initial/top level of End column (this is the element aggregated as \"initialPage\", or the first added element). NOTE: If already on the initial page, nothing happens. The transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration. The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\nIn order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\nIn scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data. For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\nWhen the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"indexOfMidColumnPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getMidColumnPages midColumnPages}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMidColumnPage: sap.ui.core.Control) -> Number","parameters":{"oMidColumnPage":"type: sap.ui.core.Control, description: The midColumnPage whose index is looked for"}},"setDefaultTransitionNameMidColumn":{"!description":"Sets a new value for property {@link #getDefaultTransitionNameMidColumn defaultTransitionNameMidColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameMidColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameMidColumn":"type: string, description: New value for property <code>defaultTransitionNameMidColumn<\/code>"}},"destroyBeginColumnPages":{"!description":"Destroys all the beginColumnPages in the aggregation {@link #getBeginColumnPages beginColumnPages}.","!static":false,"!category":"function","!type":"fn() -> sap.f.FlexibleColumnLayout"},"toBeginColumnPage":{"!description":"Navigates to a given Begin column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right). Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\nNone of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\nUse case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\nWhen the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\nFor a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"toEndColumnPage":{"!description":"Navigates to a given End column page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right). Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\nNone of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\nUse case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\nWhen the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\nFor a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\nNOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"getMidColumnPages":{"!description":"Gets content of aggregation {@link #getMidColumnPages midColumnPages}.\n\nThe content entities between which the <code>FlexibleColumnLayout<\/code> navigates in the <code>Mid<\/code> column.\n\nThese should be any control with page semantics. These aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertEndColumnPage":{"!description":"Inserts a endColumnPage into the aggregation {@link #getEndColumnPages endColumnPages}.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control, iIndex: Number) -> sap.f.FlexibleColumnLayout","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: The endColumnPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the endColumnPage should be inserted at; for a negative value of <code>iIndex<\/code>, the endColumnPage is inserted at position 0; for a value greater than the current size of the aggregation, the endColumnPage is inserted at the last position"}},"removeEndColumnPage":{"!description":"Removes a endColumnPage from the aggregation {@link #getEndColumnPages endColumnPages}.","!static":false,"!category":"function","!type":"fn(vEndColumnPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vEndColumnPage":"type: int|string|sap.ui.core.Control, description: The endColumnPage to remove or its index or id"}},"fireAfterBeginColumnNavigate":{"!description":"Fires event {@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"detachAfterBeginColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setDefaultTransitionNameEndColumn":{"!description":"Sets a new value for property {@link #getDefaultTransitionNameEndColumn defaultTransitionNameEndColumn}.\n\nDetermines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameEndColumn: String) -> sap.f.FlexibleColumnLayout","parameters":{"sDefaultTransitionNameEndColumn":"type: string, description: New value for property <code>defaultTransitionNameEndColumn<\/code>"}},"getCurrentMidColumnPage":{"!description":"Returns the currently displayed Mid column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"detachAfterEndColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterEndColumnNavigate afterEndColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setInitialMidColumnPage":{"!description":"Sets the associated {@link #getInitialMidColumnPage initialMidColumnPage}.","!static":false,"!category":"function","!type":"fn(oInitialMidColumnPage: sap.ui.core.ID | sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oInitialMidColumnPage":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this initialMidColumnPage association; alternatively, an element instance may be given"}},"attachAfterEndColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterEndColumnNavigate afterEndColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>End<\/code> column has completed.\n\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachMidColumnNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:midColumnNavigate midColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.FlexibleColumnLayout<\/code> itself.\n\nFires when navigation between two pages in the <code>Mid<\/code> column has been triggered. The transition (if any) to the new page has not started yet. This event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.FlexibleColumnLayout<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireBeginColumnNavigate":{"!description":"Fires event {@link #event:beginColumnNavigate beginColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> Boolean","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getCurrentBeginColumnPage":{"!description":"Returns the currently displayed Begin column page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"addBeginColumnPage":{"!description":"Adds some beginColumnPage to the aggregation {@link #getBeginColumnPages beginColumnPages}.","!static":false,"!category":"function","!type":"fn(oBeginColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oBeginColumnPage":"type: sap.ui.core.Control, description: The beginColumnPage to add; if empty, nothing is inserted"}},"addEndColumnPage":{"!description":"Adds some endColumnPage to the aggregation {@link #getEndColumnPages endColumnPages}.","!static":false,"!category":"function","!type":"fn(oEndColumnPage: sap.ui.core.Control) -> sap.f.FlexibleColumnLayout","parameters":{"oEndColumnPage":"type: sap.ui.core.Control, description: The endColumnPage to add; if empty, nothing is inserted"}},"to":{"!description":"Navigates to the given page inside the FlexibleColumnLayout. Columns are scanned for the page in the following order: <code>Begin<\/code>, <code>Mid<\/code>, <code>End<\/code>.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.f.FlexibleColumnLayout","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right). Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\nNone of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\nUse case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\nWhen the transitionParameters object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\nFor a proper parameter order, the \"data\" parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\nNOTE: It depends on the transition function how the object should be structured and which parameters are actually used to influence the transition. The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which we are navigating to. The ID or the control itself can be given."}},"detachBeginColumnNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beginColumnNavigate beginColumnNavigate} event of this <code>sap.f.FlexibleColumnLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.FlexibleColumnLayout","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.f.semantic.NegativeAction":{"!description":"A semantic-specific button, eligible for the <code>negativeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.NegativeAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.NegativeAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>NegativeAction<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well.","!module":"sap/f/semantic/NegativeAction","!helpDescription":"A semantic-specific button, eligible for the <code>negativeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines <code>NegativeAction<\/code> text. <b>Note:<\/b> the default text is \"Reject\"","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.f.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines <code>NegativeAction<\/code> text. <b>Note:<\/b> the default text is \"Reject\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.NegativeAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.f.Avatar":{"setCustomFontSize":{"!description":"Sets a new value for property {@link #getCustomFontSize customFontSize}.\n\nSpecifies custom font size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1.125rem<\/code>.","!static":false,"!category":"function","!type":"fn(sCustomFontSize: sap.ui.core.CSSSize) -> sap.f.Avatar","parameters":{"sCustomFontSize":"type: sap.ui.core.CSSSize, description: New value for property <code>customFontSize<\/code>"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn() -> Object"},"setImageFitType":{"!description":"Sets a new value for property {@link #getImageFitType imageFitType}.\n\nSpecifies how an image would fit in the <code>Avatar<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Cover<\/code>.","!static":false,"!category":"function","!type":"fn(sImageFitType: sap.f.AvatarImageFitType) -> sap.f.Avatar","parameters":{"sImageFitType":"type: sap.f.AvatarImageFitType, description: New value for property <code>imageFitType<\/code>"}},"getInitials":{"!description":"Gets current value of property {@link #getInitials initials}.\n\nDefines the displayed initials.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","getImageFitType":{"!description":"Gets current value of property {@link #getImageFitType imageFitType}.\n\nSpecifies how an image would fit in the <code>Avatar<\/code>.\n\nDefault value is <code>Cover<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.AvatarImageFitType"},"setDisplaySize":{"!description":"Sets a new value for property {@link #getDisplaySize displaySize}.\n\nSets a predefined display size of the <code>Avatar<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>S<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplaySize: sap.f.AvatarSize) -> sap.f.Avatar","parameters":{"sDisplaySize":"type: sap.f.AvatarSize, description: New value for property <code>displaySize<\/code>"}},"!category":"class","setDisplayShape":{"!description":"Sets a new value for property {@link #getDisplayShape displayShape}.\n\nDefines the shape of the <code>Avatar<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Circle<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayShape: sap.f.AvatarShape) -> sap.f.Avatar","parameters":{"sDisplayShape":"type: sap.f.AvatarShape, description: New value for property <code>displayShape<\/code>"}},"!constructorDescription":"Constructor for a new <code>Avatar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getInitials initials} : string<\/li>\n<li>{@link #getDisplayShape displayShape} : sap.f.AvatarShape (default: Circle)<\/li>\n<li>{@link #getDisplaySize displaySize} : sap.f.AvatarSize (default: S)<\/li>\n<li>{@link #getCustomDisplaySize customDisplaySize} : sap.ui.core.CSSSize (default: 3rem)<\/li>\n<li>{@link #getCustomFontSize customFontSize} : sap.ui.core.CSSSize (default: 1.125rem)<\/li>\n<li>{@link #getImageFitType imageFitType} : sap.f.AvatarImageFitType (default: Cover)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDetailBox detailBox} : sap.m.LightBox<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getCustomDisplaySize":{"!description":"Gets current value of property {@link #getCustomDisplaySize customDisplaySize}.\n\nSpecifies custom display size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.\n\nDefault value is <code>3rem<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getDetailBox":{"!description":"Gets content of aggregation {@link #getDetailBox detailBox}.\n\nA <code>sap.m.LightBox<\/code> instance, that will be opened automatically when the user interacts with the <code>Avatar<\/code> control.\n\nThe <code>press<\/code> event will still be fired.","!static":false,"!category":"function","!type":"fn() -> sap.m.LightBox"},"setDetailBox":{"!description":"Sets the <code>detailBox<\/code> aggregation.","!static":false,"!category":"function","!type":"fn(oLightBox: sap.m.LightBox | undefined) -> Object","parameters":{"oLightBox":"type: sap.m.LightBox|undefined, description: Instance of the <code>LightBox<\/code> control or undefined"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.f.Avatar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.Avatar<\/code> itself.\n\nFired when the user selects the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.Avatar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.Avatar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"An image-like control that has different display options for representing images, initials, and icons.\n\n<h3>Overview<\/h3>\n\nThe <code>Avatar<\/code> control allows the usage of different content, shapes, and sizes depending on the use case.\n\nThe content types that can be displayed are either images, icons, or initials. The shape can be circular or square. There are several predefined sizes, as well as an option to set a custom size.\n\n<h3>Usage<\/h3>\n\nUp to two Latin letters can be displayed as initials in an <code>Avatar<\/code>. If there are more than two letters, or if there's a non-Latin character present, a default image placeholder will be created.\n\nThere are two options for how the displayed image can fit inside the available area: <ul> <li>Cover - the image is scaled to cover all of the available area<\/li> <li>Contain - the image is scaled as large as possible while both its height and width fit inside the avalable area<\/li> <\/ul> <b>Note:<\/b> To set a custom size for the <code>Avatar<\/code>, you have to choose the <code>Custom<\/code> value for the <code>displaySize<\/code> property. Then, you have to set both the <code>customDisplaySize<\/code> and <code>customFontSize<\/code> properties.","setSrc":{"!description":"Sets a new value for property {@link #getSrc src}.\n\nDetermines the path to the desired image or icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSrc: sap.ui.core.URI) -> sap.f.Avatar","parameters":{"sSrc":"type: sap.ui.core.URI, description: New value for property <code>src<\/code>"}},"unbindDetailBox":{"!description":"Unbinds aggregation {@link #getDetailBox detailBox} from model data.","!static":false,"!category":"function","!type":"fn() -> sap.f.Avatar"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.Avatar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSrc":{"!description":"Gets current value of property {@link #getSrc src}.\n\nDetermines the path to the desired image or icon.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getDisplaySize":{"!description":"Gets current value of property {@link #getDisplaySize displaySize}.\n\nSets a predefined display size of the <code>Avatar<\/code>.\n\nDefault value is <code>S<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.AvatarSize"},"bindDetailBox":{"!description":"Binds aggregation {@link #getDetailBox detailBox} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.f.Avatar","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setInitials":{"!description":"Sets a new value for property {@link #getInitials initials}.\n\nDefines the displayed initials.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitials: String) -> sap.f.Avatar","parameters":{"sInitials":"type: string, description: New value for property <code>initials<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.f.Avatar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.f.Avatar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.Avatar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.Avatar","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setCustomDisplaySize":{"!description":"Sets a new value for property {@link #getCustomDisplaySize customDisplaySize}.\n\nSpecifies custom display size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3rem<\/code>.","!static":false,"!category":"function","!type":"fn(sCustomDisplaySize: sap.ui.core.CSSSize) -> sap.f.Avatar","parameters":{"sCustomDisplaySize":"type: sap.ui.core.CSSSize, description: New value for property <code>customDisplaySize<\/code>"}},"!module":"sap/f/Avatar","!helpDescription":"An image-like control that has different display options for representing images, initials, and icons.\n\n<h3>Overview<\/h3>\n\nThe <code>Avatar<\/code> control allows the usage of different content, shapes, and sizes depending on the use case.\n\nThe content types that can be displayed are either images, icons, or initials. The shape can be circular or square. There are several predefined sizes, as well as an option to set a custom size.\n\n<h3>Usage<\/h3>\n\nUp to two Latin letters can be displayed as initials in an <code>Avatar<\/code>. If there are more than two letters, or if there's a non-Latin character present, a default image placeholder will be created.\n\nThere are two options for how the displayed image can fit inside the available area: <ul> <li>Cover - the image is scaled to cover all of the available area<\/li> <li>Contain - the image is scaled as large as possible while both its height and width fit inside the avalable area<\/li> <\/ul> <b>Note:<\/b> To set a custom size for the <code>Avatar<\/code>, you have to choose the <code>Custom<\/code> value for the <code>displaySize<\/code> property. Then, you have to set both the <code>customDisplaySize<\/code> and <code>customFontSize<\/code> properties.","getCustomFontSize":{"!description":"Gets current value of property {@link #getCustomFontSize customFontSize}.\n\nSpecifies custom font size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.\n\nDefault value is <code>1.125rem<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"destroyDetailBox":{"!description":"Destroys the detailBox in the aggregation {@link #getDetailBox detailBox}.","!static":false,"!category":"function","!type":"fn() -> sap.f.Avatar"},"getDisplayShape":{"!description":"Gets current value of property {@link #getDisplayShape displayShape}.\n\nDefines the shape of the <code>Avatar<\/code>.\n\nDefault value is <code>Circle<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.AvatarShape"}},"sap.f.semantic.MainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.MainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.MainAction"},"sap.f.semantic.CopyAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.CopyAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.CopyAction"},"sap.f.semantic.ShareInJamAction":{"!description":"A semantic-specific button, eligible for the <code>shareInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.ShareInJamAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.ShareInJamAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ShareInJamAction<\/code>.","!module":"sap/f/semantic/ShareInJamAction","!helpDescription":"A semantic-specific button, eligible for the <code>shareInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.DynamicPageTitleShrinkRatio":{"!description":"A string type that represents the shrink ratios of the areas within the <code>sap.f.DynamicPageTitle<\/code>.","!module":"sap/f/library","!helpDescription":"A string type that represents the shrink ratios of the areas within the <code>sap.f.DynamicPageTitle<\/code>.","!category":"namespace"},"sap.f.semantic.FavoriteAction":{"!description":"A semantic-specific button, eligible for the <code>favoriteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FavoriteAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FavoriteAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FavoriteAction<\/code>.","!module":"sap/f/semantic/FavoriteAction","!helpDescription":"A semantic-specific button, eligible for the <code>favoriteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.SemanticControl":{"!description":"The base class for the {@link sap.f.semantic.SemanticButton}.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nDetermines whether the <code>SemanticControl<\/code> is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.f.semantic.SemanticControl","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticControl.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SemanticControl<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDetermines whether the <code>SemanticControl<\/code> is visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/f/semantic/SemanticControl","!helpDescription":"The base class for the {@link sap.f.semantic.SemanticButton}.","!proto":"sap.ui.core.Element","!category":"class"},"sap.f.Avatar_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.Avatar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.Avatar"},"sap.f.semantic.FullScreenAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FullScreenAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FullScreenAction"},"sap.f.semantic.PrintAction":{"!description":"A semantic-specific button, eligible for the <code>printAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.PrintAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.PrintAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>PrintAction<\/code>.","!module":"sap/f/semantic/PrintAction","!helpDescription":"A semantic-specific button, eligible for the <code>printAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.DynamicPage":{"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.DynamicPage","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\n<code>DynamicPage<\/code> content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getToggleHeaderOnTitleClick":{"!description":"Gets current value of property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>. If set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","destroyFooter":{"!description":"Destroys the footer in the aggregation {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"setHeader":{"!description":"Sets the aggregated {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn(oHeader: sap.f.DynamicPageHeader) -> sap.f.DynamicPage","parameters":{"oHeader":"type: sap.f.DynamicPageHeader, description: The header to set"}},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\n<code>DynamicPage<\/code> header.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageHeader"},"setHeaderExpanded":{"!description":"Sets a new value for property {@link #getHeaderExpanded headerExpanded}.\n\nDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderExpanded: Boolean) -> sap.f.DynamicPage","parameters":{"bHeaderExpanded":"type: boolean, description: New value for property <code>headerExpanded<\/code>"}},"!constructorDescription":"Constructor for a new <code>DynamicPage<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getHeaderExpanded headerExpanded} : boolean (default: true)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<li>{@link #getFitContent fitContent} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitle title} : sap.f.DynamicPageTitle<\/li>\n<li>{@link #getHeader header} : sap.f.DynamicPageHeader<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<li>{@link #getFooter footer} : sap.m.IBar<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getFitContent":{"!description":"Gets current value of property {@link #getFitContent fitContent}.\n\nOptimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space, such as {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable}.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle":{"!description":"Gets content of aggregation {@link #getTitle title}.\n\n<code>DynamicPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"getShowFooter":{"!description":"Gets current value of property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFitContent":{"!description":"Sets a new value for property {@link #getFitContent fitContent}.\n\nOptimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space, such as {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFitContent: Boolean) -> sap.f.DynamicPage","parameters":{"bFitContent":"type: boolean, description: New value for property <code>fitContent<\/code>"}},"setToggleHeaderOnTitleClick":{"!description":"Sets a new value for property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>. If set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bToggleHeaderOnTitleClick: Boolean) -> sap.f.DynamicPage","parameters":{"bToggleHeaderOnTitleClick":"type: boolean, description: New value for property <code>toggleHeaderOnTitleClick<\/code>"}},"getHeaderExpanded":{"!description":"Gets current value of property {@link #getHeaderExpanded headerExpanded}.\n\nDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"getPreserveHeaderStateOnScroll":{"!description":"Gets current value of property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the control`s title and header are with height larger than the given threshold.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n\n<h3>Overview<\/h3>\n\nThe control consist of several components:\n\n<ul><li>{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading on the left side, content in the middle, and actions on the right. The displayed content changes based on the current mode of the {@link sap.f.DynamicPageHeader DynamicPageHeader}.<\/li> <li>{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which can contain a single layout control and does not care about the content alignment and responsiveness. The header works in two modes - expanded and snapped and its behavior can be adjusted with the help of different properties.<\/li> <li>Content area - a generic container, which can have a single UI5 layout control and does not care about the content alignment and responsiveness.<\/li> <li>Footer - positioned at the bottom with a small offset and used for additional actions, the footer floats above the content. It can be any {@link sap.m.IBar} control.<\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUse the <code>DynamicPage<\/code> if you need to have a title, that is always visible and a header, that has configurable Expanding/Snapping functionality. If you don't need the Expanding/Snapping functionality it is better to use the {@link sap.m.Page} as a lighter control.\n\n<ul><b>Notes:<\/b> <li>If you're displaying a {@link sap.m.FlexBox} with non-adaptive content (doesn't stretch to fill the available space), it is recommended to set the <code>fitContainer<\/code> property of the {@link sap.m.FlexBox FlexBox} to <code>false<\/code>.<\/li> <li>If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is non-adaptive and may cause unpredicted behavior for the <code>DynamicPage<\/code> on smaller screen sizes, such as mobile.<\/li> <li>Snapping of the {@link sap.f.DynamicPageTitle DynamicPageTitle} is not supported in the following case: When the <code>DynamicPage<\/code> has a scroll bar, the control usually scrolls to the snapping point - the point, where the {@link sap.f.DynamicPageHeader DynamicPageHeader} is scrolled out completely. However, when there is a scroll bar, but not enough content to reach the snapping point, the snapping is not possible using scrolling.<\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPage<\/code> depends on the behavior of the content that is displayed.","setShowFooter":{"!description":"Sets a new value for property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFooter: Boolean) -> sap.f.DynamicPage","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFooter":{"!description":"Gets content of aggregation {@link #getFooter footer}.\n\n<code>DynamicPage<\/code> floating footer.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"setTitle":{"!description":"Sets the aggregated {@link #getTitle title}.","!static":false,"!category":"function","!type":"fn(oTitle: sap.f.DynamicPageTitle) -> sap.f.DynamicPage","parameters":{"oTitle":"type: sap.f.DynamicPageTitle, description: The title to set"}},"setPreserveHeaderStateOnScroll":{"!description":"Sets a new value for property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the control`s title and header are with height larger than the given threshold.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreserveHeaderStateOnScroll: Boolean) -> sap.f.DynamicPage","parameters":{"bPreserveHeaderStateOnScroll":"type: boolean, description: New value for property <code>preserveHeaderStateOnScroll<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/f/DynamicPage","!helpDescription":"A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n\n<h3>Overview<\/h3>\n\nThe control consist of several components:\n\n<ul><li>{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading on the left side, content in the middle, and actions on the right. The displayed content changes based on the current mode of the {@link sap.f.DynamicPageHeader DynamicPageHeader}.<\/li> <li>{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which can contain a single layout control and does not care about the content alignment and responsiveness. The header works in two modes - expanded and snapped and its behavior can be adjusted with the help of different properties.<\/li> <li>Content area - a generic container, which can have a single UI5 layout control and does not care about the content alignment and responsiveness.<\/li> <li>Footer - positioned at the bottom with a small offset and used for additional actions, the footer floats above the content. It can be any {@link sap.m.IBar} control.<\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUse the <code>DynamicPage<\/code> if you need to have a title, that is always visible and a header, that has configurable Expanding/Snapping functionality. If you don't need the Expanding/Snapping functionality it is better to use the {@link sap.m.Page} as a lighter control.\n\n<ul><b>Notes:<\/b> <li>If you're displaying a {@link sap.m.FlexBox} with non-adaptive content (doesn't stretch to fill the available space), it is recommended to set the <code>fitContainer<\/code> property of the {@link sap.m.FlexBox FlexBox} to <code>false<\/code>.<\/li> <li>If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is non-adaptive and may cause unpredicted behavior for the <code>DynamicPage<\/code> on smaller screen sizes, such as mobile.<\/li> <li>Snapping of the {@link sap.f.DynamicPageTitle DynamicPageTitle} is not supported in the following case: When the <code>DynamicPage<\/code> has a scroll bar, the control usually scrolls to the snapping point - the point, where the {@link sap.f.DynamicPageHeader DynamicPageHeader} is scrolled out completely. However, when there is a scroll bar, but not enough content to reach the snapping point, the snapping is not possible using scrolling.<\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPage<\/code> depends on the behavior of the content that is displayed.","setFooter":{"!description":"Sets the aggregated {@link #getFooter footer}.","!static":false,"!category":"function","!type":"fn(oFooter: sap.m.IBar) -> sap.f.DynamicPage","parameters":{"oFooter":"type: sap.m.IBar, description: The footer to set"}},"destroyHeader":{"!description":"Destroys the header in the aggregation {@link #getHeader header}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"},"destroyTitle":{"!description":"Destroys the title in the aggregation {@link #getTitle title}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPage"}},"sap.f.semantic.SemanticPage":{"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setDeleteAction":{"!description":"Sets the aggregated {@link #getDeleteAction deleteAction}.","!static":false,"!category":"function","!type":"fn(oDeleteAction: sap.f.semantic.DeleteAction) -> sap.f.semantic.SemanticPage","parameters":{"oDeleteAction":"type: sap.f.semantic.DeleteAction, description: The deleteAction to set"}},"insertTitleCustomTextAction":{"!description":"Inserts a titleCustomTextAction into the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: The titleCustomTextAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleCustomTextAction should be inserted at; for a negative value of <code>iIndex<\/code>, the titleCustomTextAction is inserted at position 0; for a value greater than the current size of the aggregation, the titleCustomTextAction is inserted at the last position"}},"setExitFullScreenAction":{"!description":"Sets the aggregated {@link #getExitFullScreenAction exitFullScreenAction}.","!static":false,"!category":"function","!type":"fn(oExitFullScreenAction: sap.f.semantic.ExitFullScreenAction) -> sap.f.semantic.SemanticPage","parameters":{"oExitFullScreenAction":"type: sap.f.semantic.ExitFullScreenAction, description: The exitFullScreenAction to set"}},"setTitleMainAction":{"!description":"Sets the aggregated {@link #getTitleMainAction titleMainAction}.","!static":false,"!category":"function","!type":"fn(oTitleMainAction: sap.f.semantic.TitleMainAction) -> sap.f.semantic.SemanticPage","parameters":{"oTitleMainAction":"type: sap.f.semantic.TitleMainAction, description: The titleMainAction to set"}},"destroyTitleCustomIconActions":{"!description":"Destroys all the titleCustomIconActions in the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleSnappedContent":{"!description":"Gets content of aggregation {@link #getTitleSnappedContent titleSnappedContent}.\n\nThe content, displayed in the title, when the header is in collapsed state.\n\n<b>Note:<\/b> The controls will be placed in the title`s left area, under the <code>titleHeading<\/code> aggregation.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent to add; if empty, nothing is inserted"}},"getPositiveAction":{"!description":"Gets content of aggregation {@link #getPositiveAction positiveAction}.\n\nA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code> footer with default text value set to <code>Accept<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.PositiveAction"},"removeAllTitleCustomIconActions":{"!description":"Removes all the controls from the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.OverflowToolbarButton]"},"indexOfTitleContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTitleContent titleContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleContent: sap.ui.core.Control) -> Number","parameters":{"oTitleContent":"type: sap.ui.core.Control, description: The titleContent whose index is looked for"}},"getSendEmailAction":{"!description":"Gets content of aggregation {@link #getSendEmailAction sendEmailAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SendEmailAction"},"setShareInJamAction":{"!description":"Sets the aggregated {@link #getShareInJamAction shareInJamAction}.","!static":false,"!category":"function","!type":"fn(oShareInJamAction: sap.f.semantic.ShareInJamAction) -> sap.f.semantic.SemanticPage","parameters":{"oShareInJamAction":"type: sap.f.semantic.ShareInJamAction, description: The shareInJamAction to set"}},"removeTitleCustomTextAction":{"!description":"Removes a titleCustomTextAction from the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.","!static":false,"!category":"function","!type":"fn(vTitleCustomTextAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vTitleCustomTextAction":"type: int|string|sap.m.Button, description: The titleCustomTextAction to remove or its index or id"}},"destroyTitleMainAction":{"!description":"Destroys the titleMainAction in the aggregation {@link #getTitleMainAction titleMainAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setToggleHeaderOnTitleClick":{"!description":"Sets a new value for property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bToggleHeaderOnTitleClick: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bToggleHeaderOnTitleClick":"type: boolean, description: New value for property <code>toggleHeaderOnTitleClick<\/code>"}},"indexOfFooterCustomAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getFooterCustomActions footerCustomActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button) -> Number","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: The footerCustomAction whose index is looked for"}},"getTitleCustomIconActions":{"!description":"Gets content of aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.\n\nThe <code>titleCustomIconActions<\/code> are placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title, right before the semantic icon action.","!static":false,"!category":"function","!type":"fn() -> [sap.m.OverflowToolbarButton]"},"setPositiveAction":{"!description":"Sets the aggregated {@link #getPositiveAction positiveAction}.","!static":false,"!category":"function","!type":"fn(oPositiveAction: sap.f.semantic.PositiveAction) -> sap.f.semantic.SemanticPage","parameters":{"oPositiveAction":"type: sap.f.semantic.PositiveAction, description: The positiveAction to set"}},"!description":"An enhanced {@link sap.f.DynamicPage}, that contains controls with semantic-specific meaning.\n\n<h3>Overview<\/h3>\n\nContent specified in the <code>sap.f.semantic.SemanticPage<\/code> aggregations is automatically positioned in dedicated sections of the title or the footer of the page, depending on the control's semantics.\n\nThe actions in the <code>SemanticPage<\/code> title are grouped to text actions or icon actions. When an aggregation is set, the actions appear in the following predefined order (from left to right):\n\n<ul>Text actions: <li>The main semantic text action - <code>titleMainAction<\/code><\/li> <li>Any custom text actions - <code>titleCustomTextActions<\/code><\/li> <li>The semantic text actions - <code>editAction<\/code>, <code>deleteAction<\/code>, <code>copyAction<\/code> and <code>addAction<\/code><\/li><\/ul>\n\n<ul>Icon actions: <li>Any custom icon actions - <code>titleCustomIconActions<\/code><\/li> <li>The simple semantic icon actions - <code>favoriteAction<\/code> and <code>flagAction<\/code><\/li> <li>The share menu semantic icon actions as a drop-down list with the following order: <ul><li><code>sendEmailAction<\/code><\/li> <li><code>discussInJamAction<\/code><\/li> <li><code>shareInJamAction<\/code><\/li> <li><code>sendMessageAction<\/code><\/li> <li><code>printAction<\/code><\/li> <li>Any <code>customShareActions<\/code><\/li><\/ul><\/li> <li>The navigation semantic actions - <code>fullScreenAction<\/code>, <code>exitFullScreenAction<\/code>, and <code>closeAction<\/li><\/code><\/ul>\n\nThe actions in the <code>SemanticPage<\/code> footer are positioned either on its left or right area and have the following predefined order:\n\n<ul>Footer left area: <li>The semantic text action - <code>messagesIndicator<\/code><\/li> <li>The semantic label - <code>draftIndicator<\/code><\/li><\/ul>\n\n<ul>Footer right area: <li>The main semantic text action - <code>footerMainAction<\/code><\/li> <li>The semantic text actions - <code>positiveAction<\/code> and <code>negativeAction<\/code><\/li> <li>Any custom text actions - <code>footerCustomActions<\/code><\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUsing the <code>SemanticPage<\/code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.\n\n<h3>Responsive behavior<\/h3>\n\nThe responsive behavior of the <code>SemanticPage<\/code> depends on the behavior of the content that is displayed.","setFavoriteAction":{"!description":"Sets the aggregated {@link #getFavoriteAction favoriteAction}.","!static":false,"!category":"function","!type":"fn(oFavoriteAction: sap.f.semantic.FavoriteAction) -> sap.f.semantic.SemanticPage","parameters":{"oFavoriteAction":"type: sap.f.semantic.FavoriteAction, description: The favoriteAction to set"}},"setSaveAsTileAction":{"!description":"Sets the aggregated {@link #getSaveAsTileAction saveAsTileAction}.","!static":false,"!category":"function","!type":"fn(oSaveAsTileAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oSaveAsTileAction":"type: sap.m.Button, description: The saveAsTileAction to set"}},"getShareInJamAction":{"!description":"Gets content of aggregation {@link #getShareInJamAction shareInJamAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.ShareInJamAction"},"setTitleHeading":{"!description":"Sets the aggregated {@link #getTitleHeading titleHeading}.","!static":false,"!category":"function","!type":"fn(oTitleHeading: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleHeading":"type: sap.ui.core.Control, description: The titleHeading to set"}},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(vHeaderContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vHeaderContent":"type: int|string|sap.ui.core.Control, description: The headerContent to remove or its index or id"}},"indexOfCustomShareAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getCustomShareActions customShareActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button) -> Number","parameters":{"oCustomShareAction":"type: sap.m.Button, description: The customShareAction whose index is looked for"}},"insertFooterCustomAction":{"!description":"Inserts a footerCustomAction into the aggregation {@link #getFooterCustomActions footerCustomActions}.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: The footerCustomAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the footerCustomAction should be inserted at; for a negative value of <code>iIndex<\/code>, the footerCustomAction is inserted at position 0; for a value greater than the current size of the aggregation, the footerCustomAction is inserted at the last position"}},"setHeaderPinnable":{"!description":"Sets a new value for property {@link #getHeaderPinnable headerPinnable}.\n\nDetermines whether the header is pinnable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderPinnable: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bHeaderPinnable":"type: boolean, description: New value for property <code>headerPinnable<\/code>"}},"getDraftIndicator":{"!description":"Gets content of aggregation {@link #getDraftIndicator draftIndicator}.\n\nA semantic-specific button which is placed in the <code>FooterLeft<\/code> area of the <code>SemanticPage<\/code> footer as a second action.","!static":false,"!category":"function","!type":"fn() -> sap.m.DraftIndicator"},"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSaveAsTileAction":{"!description":"Gets content of aggregation {@link #getSaveAsTileAction saveAsTileAction}.\n\nA button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"removeAllTitleContent":{"!description":"Removes all the controls from the aggregation {@link #getTitleContent titleContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setDraftIndicator":{"!description":"Sets the aggregated {@link #getDraftIndicator draftIndicator}.","!static":false,"!category":"function","!type":"fn(oDraftIndicator: sap.m.DraftIndicator) -> sap.f.semantic.SemanticPage","parameters":{"oDraftIndicator":"type: sap.m.DraftIndicator, description: The draftIndicator to set"}},"removeAllFooterCustomActions":{"!description":"Removes all the controls from the aggregation {@link #getFooterCustomActions footerCustomActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"destroyTitleExpandedContent":{"!description":"Destroys all the titleExpandedContent in the aggregation {@link #getTitleExpandedContent titleExpandedContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"!module":"sap/f/semantic/SemanticPage","destroyPositiveAction":{"!description":"Destroys the positiveAction in the aggregation {@link #getPositiveAction positiveAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyTitleSnappedContent":{"!description":"Destroys all the titleSnappedContent in the aggregation {@link #getTitleSnappedContent titleSnappedContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation {@link #getHeaderContent headerContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getFavoriteAction":{"!description":"Gets content of aggregation {@link #getFavoriteAction favoriteAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FavoriteAction"},"setPrintAction":{"!description":"Sets the aggregated {@link #getPrintAction printAction}.","!static":false,"!category":"function","!type":"fn(oPrintAction: sap.f.semantic.PrintAction) -> sap.f.semantic.SemanticPage","parameters":{"oPrintAction":"type: sap.f.semantic.PrintAction, description: The printAction to set"}},"addCustomShareAction":{"!description":"Adds some customShareAction to the aggregation {@link #getCustomShareActions customShareActions}.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oCustomShareAction":"type: sap.m.Button, description: The customShareAction to add; if empty, nothing is inserted"}},"getCopyAction":{"!description":"Gets content of aggregation {@link #getCopyAction copyAction}.\n\nA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.CopyAction"},"removeAllTitleExpandedContent":{"!description":"Removes all the controls from the aggregation {@link #getTitleExpandedContent titleExpandedContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyAddAction":{"!description":"Destroys the addAction in the aggregation {@link #getAddAction addAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyEditAction":{"!description":"Destroys the editAction in the aggregation {@link #getEditAction editAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setContent":{"!description":"Sets the aggregated {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"addTitleCustomIconAction":{"!description":"Adds some titleCustomIconAction to the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: The titleCustomIconAction to add; if empty, nothing is inserted"}},"getHeaderContent":{"!description":"Gets content of aggregation {@link #getHeaderContent headerContent}.\n\nThe header content.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyCustomShareActions":{"!description":"Destroys all the customShareActions in the aggregation {@link #getCustomShareActions customShareActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFullScreenAction":{"!description":"Gets content of aggregation {@link #getFullScreenAction fullScreenAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FullScreenAction"},"insertTitleContent":{"!description":"Inserts a titleContent into the aggregation {@link #getTitleContent titleContent}.","!static":false,"!category":"function","!type":"fn(oTitleContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleContent":"type: sap.ui.core.Control, description: The titleContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleContent should be inserted at; for a negative value of <code>iIndex<\/code>, the titleContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleContent is inserted at the last position"}},"removeTitleExpandedContent":{"!description":"Removes a titleExpandedContent from the aggregation {@link #getTitleExpandedContent titleExpandedContent}.","!static":false,"!category":"function","!type":"fn(vTitleExpandedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTitleExpandedContent":"type: int|string|sap.ui.core.Control, description: The titleExpandedContent to remove or its index or id"}},"destroyTitleContent":{"!description":"Destroys all the titleContent in the aggregation {@link #getTitleContent titleContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeFooterCustomAction":{"!description":"Removes a footerCustomAction from the aggregation {@link #getFooterCustomActions footerCustomActions}.","!static":false,"!category":"function","!type":"fn(vFooterCustomAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vFooterCustomAction":"type: int|string|sap.m.Button, description: The footerCustomAction to remove or its index or id"}},"destroyTitleCustomTextActions":{"!description":"Destroys all the titleCustomTextActions in the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFlagAction":{"!description":"Gets content of aggregation {@link #getFlagAction flagAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FlagAction"},"getAddAction":{"!description":"Gets content of aggregation {@link #getAddAction addAction}.\n\nA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.AddAction"},"getFooterCustomActions":{"!description":"Gets content of aggregation {@link #getFooterCustomActions footerCustomActions}.\n\nThe <code>footerCustomActions<\/code> are placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code> footer, right after the semantic footer actions.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"indexOfTitleCustomTextAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button) -> Number","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: The titleCustomTextAction whose index is looked for"}},"setFullScreenAction":{"!description":"Sets the aggregated {@link #getFullScreenAction fullScreenAction}.","!static":false,"!category":"function","!type":"fn(oFullScreenAction: sap.f.semantic.FullScreenAction) -> sap.f.semantic.SemanticPage","parameters":{"oFullScreenAction":"type: sap.f.semantic.FullScreenAction, description: The fullScreenAction to set"}},"setDiscussInJamAction":{"!description":"Sets the aggregated {@link #getDiscussInJamAction discussInJamAction}.","!static":false,"!category":"function","!type":"fn(oDiscussInJamAction: sap.f.semantic.DiscussInJamAction) -> sap.f.semantic.SemanticPage","parameters":{"oDiscussInJamAction":"type: sap.f.semantic.DiscussInJamAction, description: The discussInJamAction to set"}},"getTitleContent":{"!description":"Gets content of aggregation {@link #getTitleContent titleContent}.\n\nThe content, displayed in the title.\n\n<b>Note:<\/b> The controls will be placed in the middle area.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getPreserveHeaderStateOnScroll":{"!description":"Gets current value of property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getPrintAction":{"!description":"Gets content of aggregation {@link #getPrintAction printAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.PrintAction"},"setShowFooter":{"!description":"Sets a new value for property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFooter: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"}},"destroyCloseAction":{"!description":"Destroys the closeAction in the aggregation {@link #getCloseAction closeAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setCloseAction":{"!description":"Sets the aggregated {@link #getCloseAction closeAction}.","!static":false,"!category":"function","!type":"fn(oCloseAction: sap.f.semantic.CloseAction) -> sap.f.semantic.SemanticPage","parameters":{"oCloseAction":"type: sap.f.semantic.CloseAction, description: The closeAction to set"}},"setSendEmailAction":{"!description":"Sets the aggregated {@link #getSendEmailAction sendEmailAction}.","!static":false,"!category":"function","!type":"fn(oSendEmailAction: sap.f.semantic.SendEmailAction) -> sap.f.semantic.SemanticPage","parameters":{"oSendEmailAction":"type: sap.f.semantic.SendEmailAction, description: The sendEmailAction to set"}},"setCopyAction":{"!description":"Sets the aggregated {@link #getCopyAction copyAction}.","!static":false,"!category":"function","!type":"fn(oCopyAction: sap.f.semantic.CopyAction) -> sap.f.semantic.SemanticPage","parameters":{"oCopyAction":"type: sap.f.semantic.CopyAction, description: The copyAction to set"}},"removeAllTitleSnappedContent":{"!description":"Removes all the controls from the aggregation {@link #getTitleSnappedContent titleSnappedContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyFooterCustomActions":{"!description":"Destroys all the footerCustomActions in the aggregation {@link #getFooterCustomActions footerCustomActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeAllCustomShareActions":{"!description":"Removes all the controls from the aggregation {@link #getCustomShareActions customShareActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"getNegativeAction":{"!description":"Gets content of aggregation {@link #getNegativeAction negativeAction}.\n\nA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code> footer with default text value set to <code>Reject<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.NegativeAction"},"indexOfTitleExpandedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTitleExpandedContent titleExpandedContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control) -> Number","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: The titleExpandedContent whose index is looked for"}},"insertTitleExpandedContent":{"!description":"Inserts a titleExpandedContent into the aggregation {@link #getTitleExpandedContent titleExpandedContent}.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: The titleExpandedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleExpandedContent should be inserted at; for a negative value of <code>iIndex<\/code>, the titleExpandedContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleExpandedContent is inserted at the last position"}},"setSendMessageAction":{"!description":"Sets the aggregated {@link #getSendMessageAction sendMessageAction}.","!static":false,"!category":"function","!type":"fn(oSendMessageAction: sap.f.semantic.SendMessageAction) -> sap.f.semantic.SemanticPage","parameters":{"oSendMessageAction":"type: sap.f.semantic.SendMessageAction, description: The sendMessageAction to set"}},"destroyPrintAction":{"!description":"Destroys the printAction in the aggregation {@link #getPrintAction printAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeTitleContent":{"!description":"Removes a titleContent from the aggregation {@link #getTitleContent titleContent}.","!static":false,"!category":"function","!type":"fn(vTitleContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTitleContent":"type: int|string|sap.ui.core.Control, description: The titleContent to remove or its index or id"}},"destroyFooterMainAction":{"!description":"Destroys the footerMainAction in the aggregation {@link #getFooterMainAction footerMainAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleExpandedContent":{"!description":"Gets content of aggregation {@link #getTitleExpandedContent titleExpandedContent}.\n\nThe content,displayed in the title, when the header is in expanded state.\n\n<b>Note:<\/b> The controls will be placed in the title`s left area, under the <code>titleHeading<\/code> aggregation.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getCloseAction":{"!description":"Gets content of aggregation {@link #getCloseAction closeAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.CloseAction"},"addTitleCustomTextAction":{"!description":"Adds some titleCustomTextAction to the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.","!static":false,"!category":"function","!type":"fn(oTitleCustomTextAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomTextAction":"type: sap.m.Button, description: The titleCustomTextAction to add; if empty, nothing is inserted"}},"getShowFooter":{"!description":"Gets current value of property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyDiscussInJamAction":{"!description":"Destroys the discussInJamAction in the aggregation {@link #getDiscussInJamAction discussInJamAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyCopyAction":{"!description":"Destroys the copyAction in the aggregation {@link #getCopyAction copyAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getSendMessageAction":{"!description":"Gets content of aggregation {@link #getSendMessageAction sendMessageAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SendMessageAction"},"indexOfTitleCustomIconAction":{"!description":"Checks for the provided <code>sap.m.OverflowToolbarButton<\/code> in the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton) -> Number","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: The titleCustomIconAction whose index is looked for"}},"getHeaderExpanded":{"!description":"Gets current value of property {@link #getHeaderExpanded headerExpanded}.\n\nDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"insertCustomShareAction":{"!description":"Inserts a customShareAction into the aggregation {@link #getCustomShareActions customShareActions}.","!static":false,"!category":"function","!type":"fn(oCustomShareAction: sap.m.Button, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oCustomShareAction":"type: sap.m.Button, description: The customShareAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the customShareAction should be inserted at; for a negative value of <code>iIndex<\/code>, the customShareAction is inserted at position 0; for a value greater than the current size of the aggregation, the customShareAction is inserted at the last position"}},"destroyTitleHeading":{"!description":"Destroys the titleHeading in the aggregation {@link #getTitleHeading titleHeading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getTitleMainAction":{"!description":"Gets content of aggregation {@link #getTitleMainAction titleMainAction}.\n\nA semantic-specific button which is placed in the <code>SemanticPage<\/code> title as first action.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.TitleMainAction"},"destroyNegativeAction":{"!description":"Destroys the negativeAction in the aggregation {@link #getNegativeAction negativeAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroySendMessageAction":{"!description":"Destroys the sendMessageAction in the aggregation {@link #getSendMessageAction sendMessageAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getFooterMainAction":{"!description":"Gets content of aggregation {@link #getFooterMainAction footerMainAction}.\n\nA semantic-specific button which is placed in the <code>FooterRight<\/code> area of the <code>SemanticPage<\/code> footer with default text value set to <code>Save<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.FooterMainAction"},"!helpDescription":"An enhanced {@link sap.f.DynamicPage}, that contains controls with semantic-specific meaning.\n\n<h3>Overview<\/h3>\n\nContent specified in the <code>sap.f.semantic.SemanticPage<\/code> aggregations is automatically positioned in dedicated sections of the title or the footer of the page, depending on the control's semantics.\n\nThe actions in the <code>SemanticPage<\/code> title are grouped to text actions or icon actions. When an aggregation is set, the actions appear in the following predefined order (from left to right):\n\n<ul>Text actions: <li>The main semantic text action - <code>titleMainAction<\/code><\/li> <li>Any custom text actions - <code>titleCustomTextActions<\/code><\/li> <li>The semantic text actions - <code>editAction<\/code>, <code>deleteAction<\/code>, <code>copyAction<\/code> and <code>addAction<\/code><\/li><\/ul>\n\n<ul>Icon actions: <li>Any custom icon actions - <code>titleCustomIconActions<\/code><\/li> <li>The simple semantic icon actions - <code>favoriteAction<\/code> and <code>flagAction<\/code><\/li> <li>The share menu semantic icon actions as a drop-down list with the following order: <ul><li><code>sendEmailAction<\/code><\/li> <li><code>discussInJamAction<\/code><\/li> <li><code>shareInJamAction<\/code><\/li> <li><code>sendMessageAction<\/code><\/li> <li><code>printAction<\/code><\/li> <li>Any <code>customShareActions<\/code><\/li><\/ul><\/li> <li>The navigation semantic actions - <code>fullScreenAction<\/code>, <code>exitFullScreenAction<\/code>, and <code>closeAction<\/li><\/code><\/ul>\n\nThe actions in the <code>SemanticPage<\/code> footer are positioned either on its left or right area and have the following predefined order:\n\n<ul>Footer left area: <li>The semantic text action - <code>messagesIndicator<\/code><\/li> <li>The semantic label - <code>draftIndicator<\/code><\/li><\/ul>\n\n<ul>Footer right area: <li>The main semantic text action - <code>footerMainAction<\/code><\/li> <li>The semantic text actions - <code>positiveAction<\/code> and <code>negativeAction<\/code><\/li> <li>Any custom text actions - <code>footerCustomActions<\/code><\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUsing the <code>SemanticPage<\/code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.\n\n<h3>Responsive behavior<\/h3>\n\nThe responsive behavior of the <code>SemanticPage<\/code> depends on the behavior of the content that is displayed.","destroyFlagAction":{"!description":"Destroys the flagAction in the aggregation {@link #getFlagAction flagAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"addTitleContent":{"!description":"Adds some titleContent to the aggregation {@link #getTitleContent titleContent}.","!static":false,"!category":"function","!type":"fn(oTitleContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleContent":"type: sap.ui.core.Control, description: The titleContent to add; if empty, nothing is inserted"}},"destroySendEmailAction":{"!description":"Destroys the sendEmailAction in the aggregation {@link #getSendEmailAction sendEmailAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyFullScreenAction":{"!description":"Destroys the fullScreenAction in the aggregation {@link #getFullScreenAction fullScreenAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setFooterMainAction":{"!description":"Sets the aggregated {@link #getFooterMainAction footerMainAction}.","!static":false,"!category":"function","!type":"fn(oFooterMainAction: sap.f.semantic.FooterMainAction) -> sap.f.semantic.SemanticPage","parameters":{"oFooterMainAction":"type: sap.f.semantic.FooterMainAction, description: The footerMainAction to set"}},"setEditAction":{"!description":"Sets the aggregated {@link #getEditAction editAction}.","!static":false,"!category":"function","!type":"fn(oEditAction: sap.f.semantic.EditAction) -> sap.f.semantic.SemanticPage","parameters":{"oEditAction":"type: sap.f.semantic.EditAction, description: The editAction to set"}},"insertTitleCustomIconAction":{"!description":"Inserts a titleCustomIconAction into the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.","!static":false,"!category":"function","!type":"fn(oTitleCustomIconAction: sap.m.OverflowToolbarButton, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleCustomIconAction":"type: sap.m.OverflowToolbarButton, description: The titleCustomIconAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleCustomIconAction should be inserted at; for a negative value of <code>iIndex<\/code>, the titleCustomIconAction is inserted at position 0; for a value greater than the current size of the aggregation, the titleCustomIconAction is inserted at the last position"}},"addTitleSnappedContent":{"!description":"Adds some titleSnappedContent to the aggregation {@link #getTitleSnappedContent titleSnappedContent}.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: The titleSnappedContent to add; if empty, nothing is inserted"}},"removeAllTitleCustomTextActions":{"!description":"Removes all the controls from the aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"removeTitleCustomIconAction":{"!description":"Removes a titleCustomIconAction from the aggregation {@link #getTitleCustomIconActions titleCustomIconActions}.","!static":false,"!category":"function","!type":"fn(vTitleCustomIconAction: Number | String | sap.m.OverflowToolbarButton) -> sap.m.OverflowToolbarButton","parameters":{"vTitleCustomIconAction":"type: int|string|sap.m.OverflowToolbarButton, description: The titleCustomIconAction to remove or its index or id"}},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe <code>SemanticPage<\/code> content.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getToggleHeaderOnTitleClick":{"!description":"Gets current value of property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getDeleteAction":{"!description":"Gets content of aggregation {@link #getDeleteAction deleteAction}.\n\nA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.DeleteAction"},"!category":"class","setTitlePrimaryArea":{"!description":"Sets a new value for property {@link #getTitlePrimaryArea titlePrimaryArea}.\n\nDetermines which of the title areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at a lower rate, remaining visible as long as it can.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTitlePrimaryArea: sap.f.DynamicPageTitleArea) -> sap.f.semantic.SemanticPage","parameters":{"sTitlePrimaryArea":"type: sap.f.DynamicPageTitleArea, description: New value for property <code>titlePrimaryArea<\/code>"}},"getCustomShareActions":{"!description":"Gets content of aggregation {@link #getCustomShareActions customShareActions}.\n\nThe <code>customShareActions<\/code> are placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title, right after the semantic actions.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"setFlagAction":{"!description":"Sets the aggregated {@link #getFlagAction flagAction}.","!static":false,"!category":"function","!type":"fn(oFlagAction: sap.f.semantic.FlagAction) -> sap.f.semantic.SemanticPage","parameters":{"oFlagAction":"type: sap.f.semantic.FlagAction, description: The flagAction to set"}},"getExitFullScreenAction":{"!description":"Gets content of aggregation {@link #getExitFullScreenAction exitFullScreenAction}.\n\nA semantic-specific button which is placed in the <code>IconActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.ExitFullScreenAction"},"getMessagesIndicator":{"!description":"Gets content of aggregation {@link #getMessagesIndicator messagesIndicator}.\n\nA semantic-specific button which is placed in the <code>FooterLeft<\/code> area of the <code>SemanticPage<\/code> footer as a first action.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.MessagesIndicator"},"addFooterCustomAction":{"!description":"Adds some footerCustomAction to the aggregation {@link #getFooterCustomActions footerCustomActions}.","!static":false,"!category":"function","!type":"fn(oFooterCustomAction: sap.m.Button) -> sap.f.semantic.SemanticPage","parameters":{"oFooterCustomAction":"type: sap.m.Button, description: The footerCustomAction to add; if empty, nothing is inserted"}},"getHeaderPinnable":{"!description":"Gets current value of property {@link #getHeaderPinnable headerPinnable}.\n\nDetermines whether the header is pinnable.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySaveAsTileAction":{"!description":"Destroys the saveAsTileAction in the aggregation {@link #getSaveAsTileAction saveAsTileAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"setHeaderExpanded":{"!description":"Sets a new value for property {@link #getHeaderExpanded headerExpanded}.\n\nDetermines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHeaderExpanded: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bHeaderExpanded":"type: boolean, description: New value for property <code>headerExpanded<\/code>"}},"insertTitleSnappedContent":{"!description":"Inserts a titleSnappedContent into the aggregation {@link #getTitleSnappedContent titleSnappedContent}.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: The titleSnappedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the titleSnappedContent should be inserted at; for a negative value of <code>iIndex<\/code>, the titleSnappedContent is inserted at position 0; for a value greater than the current size of the aggregation, the titleSnappedContent is inserted at the last position"}},"!constructorDescription":"Constructor for a new <code>SemanticPage<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderExpanded headerExpanded} : boolean (default: true)<\/li>\n<li>{@link #getHeaderPinnable headerPinnable} : boolean (default: true)<\/li>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<li>{@link #getTitlePrimaryArea titlePrimaryArea} : sap.f.DynamicPageTitleArea (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitleHeading titleHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getTitleBreadcrumbs titleBreadcrumbs} : sap.m.IBreadcrumbs<\/li>\n<li>{@link #getTitleSnappedContent titleSnappedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleExpandedContent titleExpandedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleContent titleContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleMainAction titleMainAction} : sap.f.semantic.TitleMainAction<\/li>\n<li>{@link #getEditAction editAction} : sap.f.semantic.EditAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.f.semantic.DeleteAction<\/li>\n<li>{@link #getCopyAction copyAction} : sap.f.semantic.CopyAction<\/li>\n<li>{@link #getAddAction addAction} : sap.f.semantic.AddAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.f.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.f.semantic.FavoriteAction<\/li>\n<li>{@link #getFullScreenAction fullScreenAction} : sap.f.semantic.FullScreenAction<\/li>\n<li>{@link #getExitFullScreenAction exitFullScreenAction} : sap.f.semantic.ExitFullScreenAction<\/li>\n<li>{@link #getCloseAction closeAction} : sap.f.semantic.CloseAction<\/li>\n<li>{@link #getTitleCustomTextActions titleCustomTextActions} : sap.m.Button[]<\/li>\n<li>{@link #getTitleCustomIconActions titleCustomIconActions} : sap.m.OverflowToolbarButton[]<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getFooterMainAction footerMainAction} : sap.f.semantic.FooterMainAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.f.semantic.MessagesIndicator<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.f.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.f.semantic.NegativeAction<\/li>\n<li>{@link #getFooterCustomActions footerCustomActions} : sap.m.Button[]<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.f.semantic.DiscussInJamAction<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.f.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.f.semantic.SendMessageAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.f.semantic.SendEmailAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.f.semantic.PrintAction<\/li>\n<li>{@link #getCustomShareActions customShareActions} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setMessagesIndicator":{"!description":"Sets the aggregated {@link #getMessagesIndicator messagesIndicator}.","!static":false,"!category":"function","!type":"fn(oMessagesIndicator: sap.f.semantic.MessagesIndicator) -> sap.f.semantic.SemanticPage","parameters":{"oMessagesIndicator":"type: sap.f.semantic.MessagesIndicator, description: The messagesIndicator to set"}},"destroyExitFullScreenAction":{"!description":"Destroys the exitFullScreenAction in the aggregation {@link #getExitFullScreenAction exitFullScreenAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"destroyDraftIndicator":{"!description":"Destroys the draftIndicator in the aggregation {@link #getDraftIndicator draftIndicator}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeCustomShareAction":{"!description":"Removes a customShareAction from the aggregation {@link #getCustomShareActions customShareActions}.","!static":false,"!category":"function","!type":"fn(vCustomShareAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vCustomShareAction":"type: int|string|sap.m.Button, description: The customShareAction to remove or its index or id"}},"destroyTitleBreadcrumbs":{"!description":"Destroys the titleBreadcrumbs in the aggregation {@link #getTitleBreadcrumbs titleBreadcrumbs}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getDiscussInJamAction":{"!description":"Gets content of aggregation {@link #getDiscussInJamAction discussInJamAction}.\n\nA semantic-specific button which is placed in the <code>ShareMenu<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.DiscussInJamAction"},"getTitlePrimaryArea":{"!description":"Gets current value of property {@link #getTitlePrimaryArea titlePrimaryArea}.\n\nDetermines which of the title areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at a lower rate, remaining visible as long as it can.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitleArea"},"getTitleHeading":{"!description":"Gets content of aggregation {@link #getTitleHeading titleHeading}.\n\nThe <code>SemanticPage<\/code> heading.\n\nA typical usage is the <code>sap.m.Title<\/code> or any other UI5 control, that serves as a heading for an object.\n\n<b>Note:<\/b> The control will be placed in the title`s leftmost area.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setAddAction":{"!description":"Sets the aggregated {@link #getAddAction addAction}.","!static":false,"!category":"function","!type":"fn(oAddAction: sap.f.semantic.AddAction) -> sap.f.semantic.SemanticPage","parameters":{"oAddAction":"type: sap.f.semantic.AddAction, description: The addAction to set"}},"addTitleExpandedContent":{"!description":"Adds some titleExpandedContent to the aggregation {@link #getTitleExpandedContent titleExpandedContent}.","!static":false,"!category":"function","!type":"fn(oTitleExpandedContent: sap.ui.core.Control) -> sap.f.semantic.SemanticPage","parameters":{"oTitleExpandedContent":"type: sap.ui.core.Control, description: The titleExpandedContent to add; if empty, nothing is inserted"}},"destroyFavoriteAction":{"!description":"Destroys the favoriteAction in the aggregation {@link #getFavoriteAction favoriteAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleBreadcrumbs":{"!description":"Gets content of aggregation {@link #getTitleBreadcrumbs titleBreadcrumbs}.\n\nThe <code>SemanticPage<\/code> breadcrumbs.\n\nA typical usage is the <code>sap.m.Breadcrumbs<\/code> control or any other UI5 control, that implements the <code>sap.m.IBreadcrumbs<\/code> interface.\n\n<b>Note:<\/b> The control will be placed in the title`s top-left area.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBreadcrumbs"},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeaderContent headerContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> Number","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent whose index is looked for"}},"setPreserveHeaderStateOnScroll":{"!description":"Sets a new value for property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPreserveHeaderStateOnScroll: Boolean) -> sap.f.semantic.SemanticPage","parameters":{"bPreserveHeaderStateOnScroll":"type: boolean, description: New value for property <code>preserveHeaderStateOnScroll<\/code>"}},"destroyMessagesIndicator":{"!description":"Destroys the messagesIndicator in the aggregation {@link #getMessagesIndicator messagesIndicator}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation {@link #getHeaderContent headerContent}.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control, iIndex: Number) -> sap.f.semantic.SemanticPage","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the headerContent should be inserted at; for a negative value of <code>iIndex<\/code>, the headerContent is inserted at position 0; for a value greater than the current size of the aggregation, the headerContent is inserted at the last position"}},"getEditAction":{"!description":"Gets content of aggregation {@link #getEditAction editAction}.\n\nA semantic-specific button which is placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.EditAction"},"destroyDeleteAction":{"!description":"Destroys the deleteAction in the aggregation {@link #getDeleteAction deleteAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"removeTitleSnappedContent":{"!description":"Removes a titleSnappedContent from the aggregation {@link #getTitleSnappedContent titleSnappedContent}.","!static":false,"!category":"function","!type":"fn(vTitleSnappedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vTitleSnappedContent":"type: int|string|sap.ui.core.Control, description: The titleSnappedContent to remove or its index or id"}},"setNegativeAction":{"!description":"Sets the aggregated {@link #getNegativeAction negativeAction}.","!static":false,"!category":"function","!type":"fn(oNegativeAction: sap.f.semantic.NegativeAction) -> sap.f.semantic.SemanticPage","parameters":{"oNegativeAction":"type: sap.f.semantic.NegativeAction, description: The negativeAction to set"}},"destroyShareInJamAction":{"!description":"Destroys the shareInJamAction in the aggregation {@link #getShareInJamAction shareInJamAction}.","!static":false,"!category":"function","!type":"fn() -> sap.f.semantic.SemanticPage"},"getTitleCustomTextActions":{"!description":"Gets content of aggregation {@link #getTitleCustomTextActions titleCustomTextActions}.\n\nThe <code>titleCustomTextActions<\/code> are placed in the <code>TextActions<\/code> area of the <code>SemanticPage<\/code> title, right before the semantic text action.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"indexOfTitleSnappedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getTitleSnappedContent titleSnappedContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTitleSnappedContent: sap.ui.core.Control) -> Number","parameters":{"oTitleSnappedContent":"type: sap.ui.core.Control, description: The titleSnappedContent whose index is looked for"}},"setTitleBreadcrumbs":{"!description":"Sets the aggregated {@link #getTitleBreadcrumbs titleBreadcrumbs}.","!static":false,"!category":"function","!type":"fn(oTitleBreadcrumbs: sap.m.IBreadcrumbs) -> sap.f.semantic.SemanticPage","parameters":{"oTitleBreadcrumbs":"type: sap.m.IBreadcrumbs, description: The titleBreadcrumbs to set"}}},"sap.f.semantic.TitleMainAction":{"!description":"A semantic-specific button, eligible for the <code>titleMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.TitleMainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.TitleMainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TitleMainAction<\/code>.","!module":"sap/f/semantic/TitleMainAction","!helpDescription":"A semantic-specific button, eligible for the <code>titleMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.routing.TargetHandler_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.TargetHandler with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(closeDialogs: Boolean)","prototype":"sap.f.routing.TargetHandler"},"sap.f.semantic.ExitFullScreenAction":{"!description":"A semantic-specific button, eligible for the <code>exitFullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.ExitFullScreenAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.ExitFullScreenAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>ExitFullScreenAction<\/code>.","!module":"sap/f/semantic/ExitFullScreenAction","!helpDescription":"A semantic-specific button, eligible for the <code>exitFullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.DiscussInJamAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.DiscussInJamAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.DiscussInJamAction"},"sap.f.semantic.EditAction":{"!description":"A semantic-specific button, eligible for the <code>editAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.EditAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.EditAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>EditAction<\/code>.","!module":"sap/f/semantic/EditAction","!helpDescription":"A semantic-specific button, eligible for the <code>editAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.SemanticToggleButton":{"!description":"A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticToggleButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticToggleButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SemanticToggleButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well.","!module":"sap/f/semantic/SemanticToggleButton","!helpDescription":"A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.","setPressed":{"!description":"Sets a new value for property {@link #getPressed pressed}.\n\nDefines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPressed: Boolean) -> sap.f.semantic.SemanticToggleButton","parameters":{"bPressed":"type: boolean, description: New value for property <code>pressed<\/code>"}},"!proto":"sap.f.semantic.SemanticButton","getPressed":{"!description":"Gets current value of property {@link #getPressed pressed}.\n\nDefines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class"},"sap.f.semantic.PrintAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.PrintAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.PrintAction"},"sap.f.semantic.FlagAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FlagAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FlagAction"},"sap.f.semantic.FooterMainAction":{"!description":"A semantic-specific button, eligible for the <code>footerMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FooterMainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FooterMainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FooterMainAction<\/code>.","!module":"sap/f/semantic/FooterMainAction","!helpDescription":"A semantic-specific button, eligible for the <code>footerMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.AvatarSize":{"!description":"Predefined sizes for the {@link sap.f.Avatar} control.","S":{"!description":"Control size - 3rem Font size - 1.125rem","!category":"enum","!type":"String"},"!module":"sap/f/library","XL":{"!description":"Control size - 7rem Font size - 2.75rem","!category":"enum","!type":"String"},"!category":"static class","Custom":{"!description":"Custom size","!category":"enum","!type":"String"},"XS":{"!description":"Control size - 2rem Font size - 0.75rem","!category":"enum","!type":"String"},"L":{"!description":"Control size - 5rem Font size - 2rem","!category":"enum","!type":"String"},"M":{"!description":"Control size - 4rem Font size - 1.625rem","!category":"enum","!type":"String"}},"sap.f.semantic.FullScreenAction":{"!description":"A semantic-specific button, eligible for the <code>fullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FullScreenAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FullScreenAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FullScreenAction<\/code>.","!module":"sap/f/semantic/FullScreenAction","!helpDescription":"A semantic-specific button, eligible for the <code>fullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.SendMessageAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendMessageAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SendMessageAction"},"sap.f.semantic.NegativeAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.NegativeAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.NegativeAction"},"sap.f.routing.Targets_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.Targets with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oOptions: Object)","prototype":"sap.f.routing.Targets"},"sap.f.semantic.MessagesIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.MessagesIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.MessagesIndicator"},"sap.f.semantic.EditAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.EditAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.EditAction"},"sap.f.semantic.SemanticToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticToggleButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticToggleButton"},"sap.f.DynamicPageTitle_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageTitle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPageTitle"},"sap.f.semantic.SendEmailAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendEmailAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SendEmailAction"},"sap.f":{"semantic":"sap.f.semantic","AvatarShape":"sap.f.AvatarShape","customDisplaySize":{"!description":"Specifies custom display size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.","!category":"enum","!type":"sap.ui.core.CSSSize"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"!category":"namespace","LayoutType":"sap.f.LayoutType","imageFitType":{"!description":"Specifies how an image would fit in the <code>Avatar<\/code>.","!category":"enum","!type":"sap.f.AvatarImageFitType"},"headerExpanded":{"!description":"Determines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> As of version 1.48, you can initialize the control in collapsed header state by setting this property to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"displaySize":{"!description":"Sets a predefined display size of the <code>Avatar<\/code>.","!category":"enum","!type":"sap.f.AvatarSize"},"showFooter":{"!description":"Determines whether the footer is visible.","!category":"enum","!type":"Boolean"},"routing":"sap.f.routing","AvatarSize":"sap.f.AvatarSize","DynamicPageTitle":"sap.f.DynamicPageTitle_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"DynamicPageHeader":"sap.f.DynamicPageHeader_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!category":"enum","!type":"[String]"},"AvatarType":"sap.f.AvatarType","defaultTransitionNameEndColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>End<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"DynamicPageTitleArea":"sap.f.DynamicPageTitleArea","areaShrinkRatio":{"!description":"Assigns shrinking ratio to the <code>DynamicPageTitle<\/code> areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.\n\nThe value must be set in <code>Heading:Content:Actions<\/code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.\n\nFor example, if <code>2:7:1<\/code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px.\n\nIf all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8<\/code> is equal to <code>1:2:4<\/code>.\n\n<Note:> When this property is set the <code>primaryArea<\/code> property has no effect.","!category":"enum","!type":"sap.f.DynamicPageTitleShrinkRatio"},"FlexibleColumnLayoutSemanticHelper":"sap.f.FlexibleColumnLayoutSemanticHelper_obj","defaultTransitionNameBeginColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>Begin<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"!description":"SAPUI5 library with controls specialized for SAP Fiori apps.","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!category":"enum","!type":"Boolean"},"fitContent":{"!description":"Optimizes <code>DynamicPage<\/code> responsiveness on small screens and behavior when expanding/collapsing the <code>DynamicPageHeader<\/code>.\n\n<b>Note:<\/b> It is recommended to use this property when displaying content of adaptive controls that stretch to fill the available space, such as {@link sap.ui.table.Table} and {@link sap.ui.table.AnalyticalTable}.","!category":"enum","!type":"Boolean"},"src":{"!description":"Determines the path to the desired image or icon.","!category":"enum","!type":"sap.ui.core.URI"},"toggleHeaderOnTitleClick":{"!description":"Determines whether the user can switch between the expanded/collapsed states of the <code>DynamicPageHeader<\/code> by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>. If set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available and the application must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.","!category":"enum","!type":"Boolean"},"initials":{"!description":"Defines the displayed initials.","!category":"enum","!type":"String"},"displayShape":{"!description":"Defines the shape of the <code>Avatar<\/code>.","!category":"enum","!type":"sap.f.AvatarShape"},"Avatar":"sap.f.Avatar_obj","primaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 Please use the <code>areaShrinkRatio<\/code> property instead. The value of <code>areaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>primaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Determines which of the <code>DynamicPageTitle<\/code> areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at lower rate, remaining visible as much as it can.","!category":"enum","!type":"sap.f.DynamicPageTitleArea"},"layout":{"!description":"Determines the layout of the control - number of visible columns and their relative sizes.\n\nFor more details, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.","!category":"enum","!type":"sap.f.LayoutType"},"pinnable":{"!description":"Determines whether the header is pinnable.","!category":"enum","!type":"Boolean"},"DynamicPage":"sap.f.DynamicPage_obj","!module":"sap/f/library","customFontSize":{"!description":"Specifies custom font size of the <code>Avatar<\/code>.\n\n<b>Note:<\/b> It takes effect if the <code>displaySize<\/code> property is set to <code>Custom<\/code>.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!helpDescription":"SAPUI5 library with controls specialized for SAP Fiori apps.","defaultTransitionNameMidColumn":{"!description":"Determines the type of the transition/animation to apply for the <code>Mid<\/code> column when <code>to()<\/code> is called without defining the transition to use. The default is <code>slide<\/code>, other options are <code>fade<\/code>, <code>flip<\/code>, <code>show<\/code>, and the names of any registered custom transitions.","!category":"enum","!type":"String"},"DynamicPageTitleShrinkRatio":"sap.f.DynamicPageTitleShrinkRatio","FlexibleColumnLayout":"sap.f.FlexibleColumnLayout_obj","AvatarImageFitType":"sap.f.AvatarImageFitType","preserveHeaderStateOnScroll":{"!description":"Preserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the control`s title and header are with height larger than the given threshold.","!category":"enum","!type":"Boolean"},"backgroundDesign":{"!description":"Specifies the background color of the content. The visualization of the different options depends on the used theme.","!category":"enum","!type":"sap.m.BackgroundDesign"}},"sap.f.semantic.SemanticButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticButton"},"sap.f.semantic.TitleMainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.TitleMainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.TitleMainAction"},"sap.f.semantic.MessagesIndicator":{"!description":"A semantic-specific button, eligible for the <code>messagesIndicator<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.MessagesIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.MessagesIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>MessagesIndicator<\/code>.","!module":"sap/f/semantic/MessagesIndicator","!helpDescription":"A semantic-specific button, eligible for the <code>messagesIndicator<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.AvatarImageFitType":{"!description":"Types of image size and position that determine how an image fits in the {@link sap.f.Avatar} control area.","Cover":{"!description":"The image is scaled to be large enough so that the control area is completely covered.","!category":"enum","!type":"String"},"!module":"sap/f/library","!category":"static class","Contain":{"!description":"The image is scaled to the largest size so that both its width and height can fit in the control area.","!category":"enum","!type":"String"}},"sap.f.semantic.SemanticButton":{"!description":"A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction}, {@link sap.f.semantic.CloseAction CloseAction}, etc.","getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SemanticButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.f.semantic.SemanticControl","!category":"class","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.f.semantic.SemanticButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.semantic.SemanticButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.semantic.SemanticButton","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nDetermines whether the <code>SemanticButton<\/code> is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.f.semantic.SemanticButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new <code>SemanticButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticControl#constructor sap.f.semantic.SemanticControl}\ncan be used as well.","!module":"sap/f/semantic/SemanticButton","!helpDescription":"A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction}, {@link sap.f.semantic.CloseAction CloseAction}, etc.","getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nDetermines whether the <code>SemanticButton<\/code> is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.f.semantic.SemanticButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.semantic.SemanticButton<\/code> itself.\n\nFired when the user selects the <code>SemanticButton<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.semantic.SemanticButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.semantic.SemanticButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.f.semantic.DeleteAction":{"!description":"A semantic-specific button, eligible for the <code>deleteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.DeleteAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.DeleteAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>DeleteAction<\/code>.","!module":"sap/f/semantic/DeleteAction","!helpDescription":"A semantic-specific button, eligible for the <code>deleteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.SemanticControl_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.SemanticControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.SemanticControl"},"sap.f.AvatarShape":{"!description":"Types of shape for the {@link sap.f.Avatar} control.","Circle":{"!description":"Circular shape.","!category":"enum","!type":"String"},"!module":"sap/f/library","!category":"static class","Square":{"!description":"Square shape.","!category":"enum","!type":"String"}},"sap":{"sap":"sap","f":"sap.f","!category":"namespace"},"sap.f.semantic.AddAction":{"!description":"A semantic-specific button, eligible for the <code>addAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.AddAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.AddAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>AddAction<\/code>.","!module":"sap/f/semantic/AddAction","!helpDescription":"A semantic-specific button, eligible for the <code>addAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.DynamicPageTitle":{"insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position","oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted"}},"removeAllSnappedContent":{"!description":"Removes all the controls from the aggregation {@link #getSnappedContent snappedContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyExpandedContent":{"!description":"Destroys all the expandedContent in the aggregation {@link #getExpandedContent expandedContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"setPrimaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 Please use the <code>areaShrinkRatio<\/code> property instead. The value of <code>areaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>primaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Sets a new value for property {@link #getPrimaryArea primaryArea}.\n\nDetermines which of the <code>DynamicPageTitle<\/code> areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at lower rate, remaining visible as much as it can.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sPrimaryArea: sap.f.DynamicPageTitleArea) -> sap.f.DynamicPageTitle","parameters":{"sPrimaryArea":"type: sap.f.DynamicPageTitleArea, description: New value for property <code>primaryArea<\/code>"}},"addSnappedContent":{"!description":"Adds some snappedContent to the aggregation {@link #getSnappedContent snappedContent}.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oSnappedContent":"type: sap.ui.core.Control, description: The snappedContent to add; if empty, nothing is inserted"}},"removeNavigationAction":{"!description":"Removes a navigationAction from the aggregation {@link #getNavigationActions navigationActions}.","!static":false,"!category":"function","!type":"fn(vNavigationAction: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vNavigationAction":"type: int|string|sap.m.Button, description: The navigationAction to remove or its index or id"}},"destroyHeading":{"!description":"Destroys the heading in the aggregation {@link #getHeading heading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> Number","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"}},"removeAllNavigationActions":{"!description":"Removes all the controls from the aggregation {@link #getNavigationActions navigationActions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"!description":"Title of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageTitle<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageTitle<\/code> can hold any control and displays the most important information regarding the object that will always remain visible while scrolling.\n\n<b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\nIf the <code>toggleHeaderOnTitleClick<\/code> property of the {@link sap.f.DynamicPage DynamicPage} is set to <code>true<\/code>, the user can switch between the expanded/collapsed states of the {@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>.\n\nIf set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available, and the app must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageTitle<\/code> depends on the behavior of the content that is displayed.","destroyBreadcrumbs":{"!description":"Destroys the breadcrumbs in the aggregation {@link #getBreadcrumbs breadcrumbs}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.DynamicPageTitle.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setBreadcrumbs":{"!description":"Sets the aggregated {@link #getBreadcrumbs breadcrumbs}.","!static":false,"!category":"function","!type":"fn(oBreadcrumbs: sap.m.IBreadcrumbs) -> sap.f.DynamicPageTitle","parameters":{"oBreadcrumbs":"type: sap.m.IBreadcrumbs, description: The breadcrumbs to set"}},"detachStateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:stateChange stateChange} event of this <code>sap.f.DynamicPageTitle<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.f.DynamicPageTitle","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"getSnappedHeading":{"!description":"Gets content of aggregation {@link #getSnappedHeading snappedHeading}.\n\nThe <code>snappedHeading<\/code> is positioned in the <code>DynamicPageTitle<\/code> left area and is displayed when the header is in collapsed (snapped) state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in collapsed state only.\n\n<b>Note:<\/b> In order for <code>snappedHeading<\/code> to be taken into account, <code>heading<\/code> has to be empty. Combine <code>snappedHeading<\/code> with <code>expandedHeading<\/code> to switch content when the header switches state.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachStateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:stateChange stateChange} event of this <code>sap.f.DynamicPageTitle<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.f.DynamicPageTitle<\/code> itself.\n\nFired when the title state (expanded/collapsed) is toggled by user interaction. For example, scrolling, title clicking/tapping, using expand/collapse button.\n\nAlso fired when the developer toggles the title state by programmatically changing the scroll position of the scrollbar of <code>DynamicPage<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.f.DynamicPageTitle","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.f.DynamicPageTitle<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyNavigationActions":{"!description":"Destroys all the navigationActions in the aggregation {@link #getNavigationActions navigationActions}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"setExpandedHeading":{"!description":"Sets the aggregated {@link #getExpandedHeading expandedHeading}.","!static":false,"!category":"function","!type":"fn(oExpandedHeading: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oExpandedHeading":"type: sap.ui.core.Control, description: The expandedHeading to set"}},"getNavigationActions":{"!description":"Gets content of aggregation {@link #getNavigationActions navigationActions}.\n\nThe <code>DynamicPageTitle<\/code> navigation actions.\n\n<b>Note:<\/b> The <code>navigationActions<\/code> position depends on the control size. If the control size is 1280px or bigger, they are rendered right next to the <code>actions<\/code>. Otherwise, they are rendered in the top-right area, above the <code>actions<\/code>. If a large number of elements(buttons) are used, there could be visual degradations as the space for the <code>navigationActions<\/code> is limited.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"addExpandedContent":{"!description":"Adds some expandedContent to the aggregation {@link #getExpandedContent expandedContent}.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: The expandedContent to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"}},"removeSnappedContent":{"!description":"Removes a snappedContent from the aggregation {@link #getSnappedContent snappedContent}.","!static":false,"!category":"function","!type":"fn(vSnappedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vSnappedContent":"type: int|string|sap.ui.core.Control, description: The snappedContent to remove or its index or id"}},"setSnappedHeading":{"!description":"Sets the aggregated {@link #getSnappedHeading snappedHeading}.","!static":false,"!category":"function","!type":"fn(oSnappedHeading: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oSnappedHeading":"type: sap.ui.core.Control, description: The snappedHeading to set"}},"getAreaShrinkRatio":{"!description":"Gets current value of property {@link #getAreaShrinkRatio areaShrinkRatio}.\n\nAssigns shrinking ratio to the <code>DynamicPageTitle<\/code> areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.\n\nThe value must be set in <code>Heading:Content:Actions<\/code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.\n\nFor example, if <code>2:7:1<\/code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px.\n\nIf all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8<\/code> is equal to <code>1:2:4<\/code>.\n\n<Note:> When this property is set the <code>primaryArea<\/code> property has no effect.\n\nDefault value is <code>1:1.6:1.6<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitleShrinkRatio"},"getExpandedContent":{"!description":"Gets content of aggregation {@link #getExpandedContent expandedContent}.\n\nThe content that is displayed in the <code>DynamicPageTitle<\/code> in expanded state.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageTitle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/f/DynamicPageTitle","insertExpandedContent":{"!description":"Inserts a expandedContent into the aggregation {@link #getExpandedContent expandedContent}.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: The expandedContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the expandedContent should be inserted at; for a negative value of <code>iIndex<\/code>, the expandedContent is inserted at position 0; for a value greater than the current size of the aggregation, the expandedContent is inserted at the last position"}},"!helpDescription":"Title of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageTitle<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageTitle<\/code> can hold any control and displays the most important information regarding the object that will always remain visible while scrolling.\n\n<b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\nIf the <code>toggleHeaderOnTitleClick<\/code> property of the {@link sap.f.DynamicPage DynamicPage} is set to <code>true<\/code>, the user can switch between the expanded/collapsed states of the {@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>.\n\nIf set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available, and the app must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageTitle<\/code> depends on the behavior of the content that is displayed.","addNavigationAction":{"!description":"Adds some navigationAction to the aggregation {@link #getNavigationActions navigationActions}.","!static":false,"!category":"function","!type":"fn(oNavigationAction: sap.m.Button) -> sap.f.DynamicPageTitle","parameters":{"oNavigationAction":"type: sap.m.Button, description: The navigationAction to add; if empty, nothing is inserted"}},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"}},"destroySnappedContent":{"!description":"Destroys all the snappedContent in the aggregation {@link #getSnappedContent snappedContent}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"getSnappedContent":{"!description":"Gets content of aggregation {@link #getSnappedContent snappedContent}.\n\nThe content that is displayed in the <code>DynamicPageTitle<\/code> in collapsed (snapped) state.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireStateChange":{"!description":"Fires event {@link #event:stateChange stateChange} to attached listeners.","!static":false,"!category":"function","!type":"fn(mParameters?: Object) -> sap.f.DynamicPageTitle","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"}},"getExpandedHeading":{"!description":"Gets content of aggregation {@link #getExpandedHeading expandedHeading}.\n\nThe <code>expandedHeading<\/code> is positioned in the <code>DynamicPageTitle<\/code> left area and is displayed when the header is in expanded state only. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in expanded state only.\n\n<b>Note:<\/b> In order for <code>expandedHeading<\/code> to be taken into account, <code>heading<\/code> has to be empty. Combine <code>expandedHeading<\/code> with <code>snappedHeading<\/code> to switch content when the header switches state.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content is positioned in the <code>DynamicPageTitle<\/code> middle area and displayed in both expanded and collapsed (snapped) states.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nThe <code>DynamicPageTitle<\/code> actions. <br><b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!static":false,"!category":"function","!type":"fn(oAction: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to add; if empty, nothing is inserted"}},"indexOfSnappedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getSnappedContent snappedContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control) -> Number","parameters":{"oSnappedContent":"type: sap.ui.core.Control, description: The snappedContent whose index is looked for"}},"!constructorDescription":"Constructor for a new <code>DynamicPageTitle<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPrimaryArea primaryArea} : sap.f.DynamicPageTitleArea (default: Begin)<\/li>\n<li>{@link #getAreaShrinkRatio areaShrinkRatio} : sap.f.DynamicPageTitleShrinkRatio (default: 1:1.6:1.6)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeading heading} : sap.ui.core.Control<\/li>\n<li>{@link #getSnappedHeading snappedHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getExpandedHeading expandedHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getNavigationActions navigationActions} : sap.m.Button[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSnappedContent snappedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getExpandedContent expandedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getBreadcrumbs breadcrumbs} : sap.m.IBreadcrumbs<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stateChange stateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","insertSnappedContent":{"!description":"Inserts a snappedContent into the aggregation {@link #getSnappedContent snappedContent}.","!static":false,"!category":"function","!type":"fn(oSnappedContent: sap.ui.core.Control, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the snappedContent should be inserted at; for a negative value of <code>iIndex<\/code>, the snappedContent is inserted at position 0; for a value greater than the current size of the aggregation, the snappedContent is inserted at the last position","oSnappedContent":"type: sap.ui.core.Control, description: The snappedContent to insert; if empty, nothing is inserted"}},"setAreaShrinkRatio":{"!description":"Sets the value of the <code>areaShrinkRatio<\/code> property.","!static":false,"!category":"function","!type":"fn(sAreaShrinkRatio: sap.f.DynamicPageTitleShrinkRatio) -> sap.f.DynamicPageTitle","parameters":{"sAreaShrinkRatio":"type: sap.f.DynamicPageTitleShrinkRatio, description: new value of the <code>areaShrinkRatio<\/code>"}},"insertNavigationAction":{"!description":"Inserts a navigationAction into the aggregation {@link #getNavigationActions navigationActions}.","!static":false,"!category":"function","!type":"fn(oNavigationAction: sap.m.Button, iIndex: Number) -> sap.f.DynamicPageTitle","parameters":{"oNavigationAction":"type: sap.m.Button, description: The navigationAction to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the navigationAction should be inserted at; for a negative value of <code>iIndex<\/code>, the navigationAction is inserted at position 0; for a value greater than the current size of the aggregation, the navigationAction is inserted at the last position"}},"getBreadcrumbs":{"!description":"Gets content of aggregation {@link #getBreadcrumbs breadcrumbs}.\n\nThe breadcrumbs displayed in the <code>DynamicPageTitle<\/code> top-left area.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBreadcrumbs"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"setHeading":{"!description":"Sets the aggregated {@link #getHeading heading}.","!static":false,"!category":"function","!type":"fn(oHeading: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oHeading":"type: sap.ui.core.Control, description: The heading to set"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllExpandedContent":{"!description":"Removes all the controls from the aggregation {@link #getExpandedContent expandedContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.f.DynamicPageTitle","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"}},"getPrimaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 Please use the <code>areaShrinkRatio<\/code> property instead. The value of <code>areaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>primaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Gets current value of property {@link #getPrimaryArea primaryArea}.\n\nDetermines which of the <code>DynamicPageTitle<\/code> areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at lower rate, remaining visible as much as it can.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitleArea"},"removeExpandedContent":{"!description":"Removes a expandedContent from the aggregation {@link #getExpandedContent expandedContent}.","!static":false,"!category":"function","!type":"fn(vExpandedContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vExpandedContent":"type: int|string|sap.ui.core.Control, description: The expandedContent to remove or its index or id"}},"indexOfExpandedContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getExpandedContent expandedContent}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oExpandedContent: sap.ui.core.Control) -> Number","parameters":{"oExpandedContent":"type: sap.ui.core.Control, description: The expandedContent whose index is looked for"}},"destroySnappedHeading":{"!description":"Destroys the snappedHeading in the aggregation {@link #getSnappedHeading snappedHeading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"},"indexOfNavigationAction":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation {@link #getNavigationActions navigationActions}. and returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oNavigationAction: sap.m.Button) -> Number","parameters":{"oNavigationAction":"type: sap.m.Button, description: The navigationAction whose index is looked for"}},"getHeading":{"!description":"Gets content of aggregation {@link #getHeading heading}.\n\nThe <code>heading<\/code> is positioned in the <code>DynamicPageTitle<\/code> left area and is displayed in both expanded and collapsed (snapped) states of the header. Use this aggregation to display a title (or any other UI5 control that serves as a heading) that has to be present in both expanded and collapsed states of the header.\n\n<b>Note:<\/b> <code>heading<\/code> is mutually exclusive with <code>snappedHeading<\/code> and <code>expandedHeading<\/code>. If <code>heading<\/code> is provided, both <code>snappedHeading<\/code> and <code>expandedHeading<\/code> are ignored. <code>heading<\/code> is useful when the content of <code>snappedHeading<\/code> and <code>expandedHeading<\/code> needs to be the same as it replaces them both.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"destroyExpandedHeading":{"!description":"Destroys the expandedHeading in the aggregation {@link #getExpandedHeading expandedHeading}.","!static":false,"!category":"function","!type":"fn() -> sap.f.DynamicPageTitle"}},"sap.f.semantic.CopyAction":{"!description":"A semantic-specific button, eligible for the <code>copyAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.CopyAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.CopyAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>CopyAction<\/code>.","!module":"sap/f/semantic/CopyAction","!helpDescription":"A semantic-specific button, eligible for the <code>copyAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.DynamicPageHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.DynamicPageHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.DynamicPageHeader"},"sap.f.routing.Router":{"!description":"See {@link sap.ui.core.routing.Router} for the constructor arguments.\n\nThe <code>sap.f.routing.Router<\/code> is intended to be used with {@link sap.f.FlexibleColumnLayout} as a root control.\n\nThe difference to the {@link sap.ui.core.routing.Router} are the properties viewLevel, transition and transitionParameters you can specify in every Route or Target created by this router.\n\nAdditionally, the <code>layout<\/code> property can be specified in every Route, in which case it will be applied to the root control.","extend":{"!description":"Creates a new subclass of class sap.f.routing.Router with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.Router.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Instantiates a <code>sap.f.routing.Router<\/code>.","!module":"sap/f/routing/Router","!helpDescription":"See {@link sap.ui.core.routing.Router} for the constructor arguments.\n\nThe <code>sap.f.routing.Router<\/code> is intended to be used with {@link sap.f.FlexibleColumnLayout} as a root control.\n\nThe difference to the {@link sap.ui.core.routing.Router} are the properties viewLevel, transition and transitionParameters you can specify in every Route or Target created by this router.\n\nAdditionally, the <code>layout<\/code> property can be specified in every Route, in which case it will be applied to the root control.","!proto":"sap.ui.core.routing.Router","!category":"class","getTargetHandler":{"!description":"Returns the TargetHandler instance.","!static":false,"!category":"function","!type":"fn() -> sap.f.routing.TargetHandler"}},"sap.f.semantic.FavoriteAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FavoriteAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FavoriteAction"},"sap.f.semantic.MainAction":{"!description":"Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.MainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.MainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MainAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well.","!module":"sap/f/semantic/MainAction","!helpDescription":"Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines <code>MainAction<\/code> text","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.f.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines <code>MainAction<\/code> text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.MainAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.f.routing.TargetHandler":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.TargetHandler with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setCloseDialogs":{"!description":"Sets if a navigation should close dialogs","!static":false,"!category":"function","!type":"fn(bCloseDialogs: Boolean) -> sap.f.routing.TargetHandler","parameters":{"bCloseDialogs":"type: boolean, description: close dialogs if true"}},"getCloseDialogs":{"!description":"Gets if a navigation should close dialogs","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.TargetHandler.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Instantiates a TargetHandler, a class used for closing dialogs and showing transitions in NavContainers when targets are displayed.<br/>\n<b>You should not create an own instance of this class.<\/b> It will be created when using {@link sap.f.routing.Router} or {@link sap.f.routing.Targets}.\nYou may use the {@link #setCloseDialogs} function to specify if dialogs should be closed on displaying other views.","!module":"sap/f/routing/TargetHandler","!proto":"sap.ui.base.Object","!category":"class"},"sap.f.semantic.FooterMainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.FooterMainAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.FooterMainAction"},"sap.f.semantic.FlagAction":{"!description":"A semantic-specific button, eligible for the <code>flagAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.FlagAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.FlagAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>FlagAction<\/code>.","!module":"sap/f/semantic/FlagAction","!helpDescription":"A semantic-specific button, eligible for the <code>flagAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.FlexibleColumnLayoutSemanticHelper":{"!description":"Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app.\n\n<b>Note:<\/b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout<\/code>, but exists for convenience only.\n\n<ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> revolves around two main methods: <li><code>getCurrentUIState<\/code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout<\/code> column, based on the current control state (number and visibility of columns, layout, etc..)<\/li> <li><code>getNextUIState<\/code>Suggests which <code>layout<\/code> to use when navigating to another view level (e.g. from one view to two views).<\/li><\/ul>\n\nSample usage of the class:\n\n<pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n<\/code>\n<\/pre>\n\nCalling <code>getCurrentUIState()<\/code> will return information which action buttons (Close, FullScreen, ExitFullScreen) must be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.\n\nCalling <code>getNextUIState(2)<\/code> will return information about the expected layout and action buttons if the application should display three views (master-detail-detail), based on the current state.\n\nSimilarly, calling <code>getNextUIState(0)<\/code> will return information about the expected layout and action buttons if the application should display the initial view only (master), based on the current state.\n\nFor more information, see {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState} and {@link sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState}","getInstanceFor":{"!description":"Returns an instance of the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class for a given <code>sap.f.FlexibleColumnLayout<\/code> object.","!static":true,"!category":"function","!type":"fn(oFlexibleColumnLayout: sap.f.FlexibleColumnLayout, oSettings?: Object) -> sap.f.FlexibleColumnLayoutSemanticHelper","parameters":{"oFlexibleColumnLayout":"type: sap.f.FlexibleColumnLayout, description: The <code>sap.f.FlexibleColumnLayout<\/code> object to get a semantic helper instance for","oSettings":"type: object, description: An optional settings object to be used when creating the instance. <b>Note:<\/b> will be considered only for the first <code>getInstanceFor<\/code> call for the given <code>sap.f.FlexibleColumnLayout<\/code> object."}},"!constructorDescription":"Constructor for an sap.f.FlexibleColumnLayoutSemanticHelper.","!module":"sap/f/FlexibleColumnLayoutSemanticHelper","!helpDescription":"Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app.\n\n<b>Note:<\/b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout<\/code>, but exists for convenience only.\n\n<ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> revolves around two main methods: <li><code>getCurrentUIState<\/code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout<\/code> column, based on the current control state (number and visibility of columns, layout, etc..)<\/li> <li><code>getNextUIState<\/code>Suggests which <code>layout<\/code> to use when navigating to another view level (e.g. from one view to two views).<\/li><\/ul>\n\nSample usage of the class:\n\n<pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n<\/code>\n<\/pre>\n\nCalling <code>getCurrentUIState()<\/code> will return information which action buttons (Close, FullScreen, ExitFullScreen) must be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.\n\nCalling <code>getNextUIState(2)<\/code> will return information about the expected layout and action buttons if the application should display three views (master-detail-detail), based on the current state.\n\nSimilarly, calling <code>getNextUIState(0)<\/code> will return information about the expected layout and action buttons if the application should display the initial view only (master), based on the current state.\n\nFor more information, see {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState} and {@link sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState}","!proto":"sap.ui.base.Object","getNextUIState":{"!description":"Returns an object, describing the state that the control will have after navigating to a different view level.\n\nAbout the format of return value, see: {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState}","!static":false,"!category":"function","!type":"fn(iNextLevel: Number) -> Object","parameters":{"iNextLevel":"type: int, description: the view level that should be represented. 0 means initial (master only), 1 - master-detail, 2 - master-detail-detail, 3 and above - subsequent views"}},"!category":"class","getCurrentUIState":{"!description":"Returns an object, describing the current state of the control and the expected action buttons for each column.\n\n<ul>The returned object has the following structure: <li>layout - the value of the <code>layout<\/code> property<\/li> <li>maxColumnsCount - the maximum number of columns that can be displayed at once based on the control width. See {@link sap.f.FlexibleColumnLayout#getMaxColumnsCount}<\/li> <li>columnsSizes - an object with fields <code>beginColumn, midColumn, endColumn<\/code>, representing the relative percentage sizes of the three columns as integers<\/li> <li>columnsVisibility - an object with fields <code>beginColumn, midColumn, endColumn<\/code>, representing the visibility of the three columns<\/li> <li>isFullScreen - <code>true<\/code> if only one column is visible at the moment, <code>false<\/code> otherwise <b>Note:<\/b> This may be due to small screen size (phone) or due to a layout, for which a single column takes up the whole width<\/li> <li>isLogicallyFullScreen - <code>true<\/code> if the current <code>layout<\/code> is one of the following: <code>sap.f.LayoutType.OneColumn, sap.f.LayoutType.MidColumnFullScreen, sap.f.LayoutType.EndColumnFullScreen<\/code>, <code>false<\/code> otherwise <b>Note:<\/b> While <code>isFullScreen<\/code> can be <code>true<\/code> for any layout, due to small screen size, <code>isLogicallyFullScreen<\/code> will only be <code>true<\/code> for the layout values, listed above.<\/li> <li>actionButtonsInfo - an object with fields <code>midColumn, endColumn<\/code>, each containing an object, telling whether action buttons should be shown in the <code>mid<\/code> and <code>end<\/code> columns, and what value of the <code>layout<\/code> property should be set upon clicking these buttons. Each of these objects has the following fields: <code>closeColumn, fullScreen, exitFullScreen<\/code>. If <code>null<\/code>, then the respective action button should not be shown, otherwise provides the value of <code>layout<\/code> property for the action button.<\/li><\/ul>\n\nExample value:\n\n<pre>\n <code>\n {\n\t   \"layout\":\"ThreeColumnsMidExpanded\",\n\t   \"maxColumnsCount\":3,\n\t   \"columnsSizes\":{\n\t\t  \"beginColumn\":25,\n\t\t  \"midColumn\":50,\n\t\t  \"endColumn\":25\n\t   },\n\t   \"columnsVisibility\":{\n\t\t  \"beginColumn\":true,\n\t\t  \"midColumn\":true,\n\t\t  \"endColumn\":true\n\t   },\n\t   \"isFullScreen\":false,\n\t   \"isLogicallyFullScreen\":false,\n\t   \"actionButtonsInfo\":{\n\t\t  \"midColumn\":{\n\t\t\t \"fullScreen\":null,\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":null\n\t\t  },\n\t\t  \"endColumn\":{\n\t\t\t \"fullScreen\":\"EndColumnFullScreen\",\n\t\t\t \"exitFullScreen\":null,\n\t\t\t \"closeColumn\":\"TwoColumnsBeginExpanded\"\n\t\t  }\n\t   }\n\t}\n <\/code>\n <\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"getDefaultLayouts":{"!description":"Returns the default layout types for the different numbers of columns.\n\n<ul>The returned object has the following fields: <li>defaultLayoutType - the layout that will be suggested by default when only 1 column needs to be shown<\/li> <li>defaultTwoColumnLayoutType - the layout that will be suggested by default when 2 columns have to be shown side by side<\/li> <li>defaultThreeColumnLayoutType - the layout that will be suggested by default when 3 columns have to be shown side by side<\/li><\/ul>","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.f.LayoutType":{"!description":"Layouts, representing the number of columns to be displayed and their relative widths for a {@link sap.f.FlexibleColumnLayout} control.\n\nEach layout has a predefined ratio for the three columns, depending on device size. Based on the device and layout, some columns are hidden. For more information, refer to the ratios (in %) for each value, listed below: (dash \"-\" means non-accessible columns).\n\n<b>Note:<\/b> Please note that on a phone device, due to the limited screen size, only one column can be displayed at a time. For all two-column layouts, this column is the <code>Mid<\/code> column, and for all three-column layouts - the <code>End<\/code> column, even though the respective column may be hidden on desktop and tablet for that particular layout. Therefore some of the names (such as <code>ThreeColumnsMidExpandedEndHidden<\/code> for example) are representative of the desktop scenario only.\n\nFor more information, see {@link topic:3b9f760da5b64adf8db7f95247879086 Types of Layout} in the documentation.","ThreeColumnsMidExpanded":{"!description":"Desktop: 25/50/25 Begin, Mid (expanded) and End columns are displayed\n\nTablet: 0/67/33 Mid (expanded) and End columns are displayed, Begin is accessible by a layout arrow\n\nPhone: -/-/100 only the End column is displayed\n\nUse to display all three pages (master, detail, detail-detail) when the user should focus on the detail.","!category":"enum","!type":"String"},"!module":"sap/f/library","OneColumn":{"!description":"Desktop: 100/-/- only the Begin column is displayed\n\nTablet: 100/-/- only the Begin column is displayed\n\nPhone: 100/-/- only the Begin column is displayed\n\nUse to start with a master page.","!category":"enum","!type":"String"},"TwoColumnsMidExpanded":{"!description":"Desktop: 33/67/- Begin and Mid (expanded) columns are displayed\n\nTablet: 33/67/- Begin and Mid (expanded) columns are displayed\n\nPhone: -/100/- only the Mid column is displayed\n\nUse to display both a master and a detail page when the user should focus on the detail page.","!category":"enum","!type":"String"},"MidColumnFullScreen":{"!description":"Desktop: -/100/- only the Mid column is displayed\n\nTablet: -/100/- only the Mid column is displayed\n\nPhone: -/100/- only the Mid column is displayed\n\nUse to display a detail page only, when the user should focus entirely on it.","!category":"enum","!type":"String"},"ThreeColumnsEndExpanded":{"!description":"Desktop: 25/25/50 Begin, Mid and End (expanded) columns are displayed\n\nTablet: 0/33/67 Mid and End (expanded) columns are displayed, Begin is accessible by layout arrows\n\nPhone: -/-/100 (only the End column is displayed)\n\nUse to display all three pages (master, detail, detail-detail) when the user should focus on the detail-detail.","!category":"enum","!type":"String"},"ThreeColumnsMidExpandedEndHidden":{"!description":"Desktop: 33/67/0 Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow\n\nTablet: 33/67/0 Begin and Mid (expanded) columns are displayed, End is accessible by a layout arrow\n\nPhone: -/-/100 only the End column is displayed\n\nUse to display the master and detail pages when the user should focus on the detail. The detail-detail is still loaded and easily accessible with a layout arrow.","!category":"enum","!type":"String"},"!category":"static class","EndColumnFullScreen":{"!description":"Desktop: -/-/100 only the End column is displayed\n\nTablet: -/-/100 only the End column is displayed\n\nPhone: -/-/100 only the End column is displayed\n\nUse to display a detail-detail page only, when the user should focus entirely on it.","!category":"enum","!type":"String"},"TwoColumnsBeginExpanded":{"!description":"Desktop: 67/33/- Begin (expanded) and Mid columns are displayed\n\nTablet: 67/33/- Begin (expanded) and Mid columns are displayed\n\nPhone: -/100/- only the Mid column is displayed\n\nUse to display both a master and a detail page when the user should focus on the master page.","!category":"enum","!type":"String"},"ThreeColumnsBeginExpandedEndHidden":{"!description":"Desktop: 67/33/0 Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows\n\nTablet: 67/33/0 Begin (expanded) and Mid columns are displayed, End is accessible by layout arrows\n\nPhone: -/-/100 only the End column is displayed\n\nUse to display the master and detail pages when the user should focus on the master. The detail-detail is still loaded and easily accessible with layout arrows.","!category":"enum","!type":"String"}},"sap.f.semantic.ExitFullScreenAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.ExitFullScreenAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.ExitFullScreenAction"},"sap.f.semantic.CloseAction":{"!description":"A semantic-specific button, eligible for the <code>closeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.CloseAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.CloseAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>CloseAction<\/code>.","!module":"sap/f/semantic/CloseAction","!helpDescription":"A semantic-specific button, eligible for the <code>closeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.routing.Targets":{"extend":{"!description":"Creates a new subclass of class sap.f.routing.Targets with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.routing.Targets.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Provides a convenient way for placing views into the correct containers of your application.\nThe sap.f extension of Targets also handles the triggering of page navigation when the target control is a {@link sap.f.FlexibleColumnLayout}.\nOther controls are also allowed, but the extra parameters viewLevel, transition and transitionParameters are ignored and it will behave like {@link sap.ui.core.routing.Targets}.\nWhen a target is displayed, dialogs will be closed. To change this use {@link #getTargetHandler} and {@link sap.f.routing.TargetHandler#setCloseDialogs}.","!module":"sap/f/routing/Targets","!proto":"sap.ui.core.routing.Targets","!category":"class","getTargetHandler":{"!description":"Returns the TargetHandler instance.","!static":false,"!category":"function","!type":"fn() -> sap.f.routing.TargetHandler"}},"sap.f.semantic.DeleteAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.f.semantic.DeleteAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.f.semantic.DeleteAction"},"sap.f.semantic":{"TitleMainAction":"sap.f.semantic.TitleMainAction_obj","PrintAction":"sap.f.semantic.PrintAction_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!category":"enum","!type":"sap.ui.core.BusyIndicatorSize"},"SemanticControl":"sap.f.semantic.SemanticControl_obj","EditAction":"sap.f.semantic.EditAction_obj","FullScreenAction":"sap.f.semantic.FullScreenAction_obj","!category":"namespace","headerExpanded":{"!description":"Determines whether the header is expanded.\n\nThe header can be also expanded/collapsed by user interaction, which requires the property to be internally mutated by the control to reflect the changed state.\n\n<b>Note:<\/b> Please be aware, that initially collapsed header state is not supported, so <code>headerExpanded<\/code> should not be set to <code>false<\/code> when initializing the control.","!category":"enum","!type":"Boolean"},"MainAction":"sap.f.semantic.MainAction_obj","AddAction":"sap.f.semantic.AddAction_obj","enabled":{"!description":"Determines whether the <code>SemanticButton<\/code> is enabled.","!category":"enum","!type":"Boolean"},"showFooter":{"!description":"Determines whether the footer is visible.","!category":"enum","!type":"Boolean"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"SendEmailAction":"sap.f.semantic.SendEmailAction_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"NegativeAction":"sap.f.semantic.NegativeAction_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!category":"enum","!type":"[String]"},"SemanticButton":"sap.f.semantic.SemanticButton_obj","text":{"!description":"Defines <code>PositiveAction<\/code> text. <b>Note:<\/b> the default text is \"Accept\"","!category":"enum","!type":"String"},"FavoriteAction":"sap.f.semantic.FavoriteAction_obj","FlagAction":"sap.f.semantic.FlagAction_obj","SemanticToggleButton":"sap.f.semantic.SemanticToggleButton_obj","SendMessageAction":"sap.f.semantic.SendMessageAction_obj","headerPinnable":{"!description":"Determines whether the header is pinnable.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Determines whether the <code>SemanticControl<\/code> is visible.","!category":"enum","!type":"Boolean"},"CopyAction":"sap.f.semantic.CopyAction_obj","toggleHeaderOnTitleClick":{"!description":"Determines whether the user can switch between the expanded/collapsed states of the header by clicking on the title.\n\nIf set to <code>false<\/code>, the title is not clickable and the application must provide other means for expanding/collapsing the header, if necessary.","!category":"enum","!type":"Boolean"},"pressed":{"!description":"Defines the <code>SemanticToggleButton<\/code> pressed state.\n\nThe property is set to <code>true<\/code> when the control is toggled (default is <code>false<\/code>).","!category":"enum","!type":"Boolean"},"DiscussInJamAction":"sap.f.semantic.DiscussInJamAction_obj","PositiveAction":"sap.f.semantic.PositiveAction_obj","ShareInJamAction":"sap.f.semantic.ShareInJamAction_obj","titlePrimaryArea":{"!description":"Determines which of the title areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at a lower rate, remaining visible as long as it can.","!category":"enum","!type":"sap.f.DynamicPageTitleArea"},"ExitFullScreenAction":"sap.f.semantic.ExitFullScreenAction_obj","MessagesIndicator":"sap.f.semantic.MessagesIndicator_obj","FooterMainAction":"sap.f.semantic.FooterMainAction_obj","SemanticPage":"sap.f.semantic.SemanticPage_obj","DeleteAction":"sap.f.semantic.DeleteAction_obj","preserveHeaderStateOnScroll":{"!description":"Preserves the current header state when scrolling.\n\nFor example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Note:<\/b> Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the title and the header are with height larger than a given threshold.","!category":"enum","!type":"Boolean"},"CloseAction":"sap.f.semantic.CloseAction_obj"},"sap.f.semantic.SendMessageAction":{"!description":"A semantic-specific button, eligible for the <code>sendMessageAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.SendMessageAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.SendMessageAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>SendMessageAction<\/code>.","!module":"sap/f/semantic/SendMessageAction","!helpDescription":"A semantic-specific button, eligible for the <code>sendMessageAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","!proto":"sap.f.semantic.SemanticButton","!category":"class"},"sap.f.semantic.PositiveAction":{"!description":"A semantic-specific button, eligible for the <code>positiveAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","extend":{"!description":"Creates a new subclass of class sap.f.semantic.PositiveAction with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.f.semantic.PositiveAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>PositiveAction<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well.","!module":"sap/f/semantic/PositiveAction","!helpDescription":"A semantic-specific button, eligible for the <code>positiveAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines <code>PositiveAction<\/code> text. <b>Note:<\/b> the default text is \"Accept\"","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.f.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines <code>PositiveAction<\/code> text. <b>Note:<\/b> the default text is \"Accept\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.f.semantic.PositiveAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.f.DynamicPageTitleArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 undefined<br>Defines the areas within the <code>sap.f.DynamicPageTitle<\/code>.","!module":"sap/f/library","Begin":{"!description":"The area includes the <code>heading<\/code>, <code>expandedContent<\/code> and <code>snappedContent<\/code> aggregations, positioned in the beginning area of the {@link sap.f.DynamicPageTitle}.","!category":"enum","!type":"String"},"!category":"static class","Middle":{"!description":"The area includes the <code>content<\/code> aggregation, positioned in the middle part of the {@link sap.f.DynamicPageTitle}.","!category":"enum","!type":"String"}}}}