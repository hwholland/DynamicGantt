<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns="sap.m" xmlns:build="sap.build" xmlns:core="sap.ui.core" xmlns:smartlink="sap.ui.comp.navpopover"
	xmlns:st="sap.ui.comp.smarttable" xmlns:table="sap.ui.table" xmlns:layout="sap.ui.layout">
	<!-- @classdesc @name: Name: sap.suite.ui.generic.template.fragments.SmartTable.fragment.xml
		@param {UI.Facet} [facet] @param {edm.EntitySet} [entitySet] @param {edm.EntityType}
		[entityType] -->

	<template:with path="facet>Target" var="target">
			<template:with path="target>"
				helper="sap.ui.model.odata.AnnotationHelper.gotoEntitySet" var="listEntitySet">
				<template:with path="listEntitySet>entityType"
					helper="sap.ui.model.odata.AnnotationHelper.gotoEntityType" var="listEntityType">
					<template:with path="target>"
						helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="collection">
						<st:SmartTable
							id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::Table"
							persistencyKey="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::Table"
							tableBindingPath="{= ${path: 'target>AnnotationPath'}.slice(0, ${path: 'target>AnnotationPath'}.indexOf('/')) }"
							fitContainer="false" useOnlyOneSolidToolbar="true"
							enableAutoBinding="true" showRowCount="true" beforeRebindTable="._templateEventHandlers.onBeforeRebindDetailTable"
							dataReceived="._templateEventHandlers.onDataReceived" useVariantManagement="false"
							useExportToExcel="false"
							useTablePersonalisation="{= !${parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/routeConfig/'}, {path: 'facet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.isOrHasComplexTable'}}"
							entitySet="{path: 'listEntitySet>name'}" class="sapSmartTemplatesSmartTable"
							demandPopin="true" noData="{i18n>NOITEMS}"
							showFullScreenButton="{= ${parts: [{path: 'parameter>/settings/routeConfig/'}, {path: 'facet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.showFullScreenButton'}}"
							build:metadata="#pattern:Table;bindingContext:columns:Items:\{path: 'target>', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'\};">
							<st:customData>
								<core:CustomData key="dateFormatSettings"
									value='\{"UTC":true,"style":"short"\}' />
								<template:with
									path="listEntityType>com.sap.vocabularies.UI.v1.PresentationVariant"
									var="variant">
									<template:if test="{= ${variant>SortOrder}}">
										<core:CustomData key="TemplateSortOrder"
											value="{path: 'variant>SortOrder', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getSortOrder'}" />
									</template:if>
								</template:with>
							</st:customData>
							<st:semanticObjectController>
								<smartlink:SemanticObjectController beforePopoverOpens="._templateEventHandlers.onBeforeSemanticObjectLinkPopoverOpens"
																	prefetchNavigationTargets="true"/>
							</st:semanticObjectController>
							<st:layoutData>
								<layout:GridData id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::Table::GridData" span="XL12 L12 M12 S12" />
							</st:layoutData>
							<st:customToolbar>
								<OverflowToolbar design="Transparent">
									<ToolbarSpacer />
									<template:if test="{= !${parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/routeConfig/'}, {path: 'facet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.isOrHasComplexTable'}}">
										<!-- Custom Action Breakout -->
										<template:repeat list="{parameter>/manifest/sap.ui5/extends/extensions/sap.ui.controllerExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details/sap.ui.generic.app}" var="tmpEntitySet">
											<template:if
												test="{= ${tmpEntitySet>EntitySet} === ${parameter>/entitySet} }">
												<template:repeat list="{tmpEntitySet>Sections}"
													var="section">
													<template:if
														test="{parts: [{path: 'facet>'}, {path: 'section>id'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.extensionPointFragmentExists'}">
														<template:repeat list="{section>Actions}"
															var="customAction">
															<Button id="{customAction>id}" text="{customAction>text}"
																press="{customAction>press}" type="Transparent">
																<layoutData>
																	<OverflowToolbarLayoutData
																		moveToOverflow="{= !(${customAction>importance} === 'com.sap.vocabularies.UI.v1.ImportanceType/High')}"
																		stayInOverflow="{= ${customAction>importance} === 'com.sap.vocabularies.UI.v1.ImportanceType/Low'}" />
																</layoutData>
															</Button>
														</template:repeat>
													</template:if>
												</template:repeat>
											</template:if>
										</template:repeat>
						                <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.DatafieldActionButtons" type="XML"/>
									</template:if>
                                    <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.AnalyticalActionButtons" type="XML"/>
                                    <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.CRUDActionButtons" type="XML"/>
								</OverflowToolbar>
							</st:customToolbar>
							<template:if test="{= ${parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/routeConfig/'}, {path: 'facet>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.isOrHasComplexTable'}}">
								<template:then>
									<template:if
										test="{= ${listEntityType>sap:semantics} === 'aggregate'  &amp;&amp; !${device>/system/phone}}"
										build:metadata="#ignore">
										<template:then>
											<table:AnalyticalTable id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::previewTable"
												visibleRowCountMode="Auto" enableColumnReordering="false" 
												showColumnVisibilityMenu="false" expandFirstLevel="false"
												selectionMode="single"
												enableColumnFreeze="true" enableCellFilter="true">
                                                <table:columns>
                                                    <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.AnalyticalTableColumns" type="XML"/>
                                                </table:columns>
											</table:AnalyticalTable>
										</template:then>
										<template:elseif test="{= ${parameter>/settings/gridTable} &amp;&amp; !${device>/system/phone}}" build:metadata="#ignore">
											<table:Table id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::previewTable"
														 enableColumnReordering="false" showColumnVisibilityMenu="false" visibleRowCountMode="Auto"
														 selectionMode="{= ${parts: [{path: 'meta>com.sap.vocabularies.UI.v1.LineItem'}, {path: 'parameter>/entitySet'},
														 	{path: 'parameter>/manifest/sap.ui5/extends/extensions/sap.ui.controllerExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details/sap.ui.generic.app'},
														 	{path: 'facet>'}, {path: 'listEntitySet>'}, {path: 'parameter>/manifest/sap.ui.generic.app/pages'}],
														 	formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getSelectionModeGridTable'}}"
														 enableColumnFreeze="true" enableCellFilter="true">
						                        <table:columns>
                                                    <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.GridTableColumns" type="XML"/>
						                        </table:columns>
											</table:Table>
										</template:elseif>
										<template:else>
											<Table
												id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::previewTable"
												fixedLayout="true" growing="false" growingThreshold="5" editable="false"
												mode="None">
												<core:Fragment
													fragmentName="sap.suite.ui.generic.template.fragments.TableColumns"
													type="XML" />
											</Table>
										</template:else>
									</template:if>
									<List>
										<CustomListItem type="Active" 
														press="._templateEventHandlers.onShowAll">
											<content>
													<VBox alignItems="Center">
														<Text id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::previewTable-tableLengthText"
															  class="sapUiSmallMarginTop"/>
														<Label text="{i18n>SHOW_ALL}" design="Bold" class="sapUiTinyMargin"/>
													</VBox>
												
											</content>
										</CustomListItem>
									</List>
								</template:then>
								<template:else>
									<template:if
										test="{= ${listEntityType>sap:semantics} === 'aggregate'  &amp;&amp; !${device>/system/phone}}"
										build:metadata="#ignore">
										<template:then>
											<table:AnalyticalTable 
												id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::analyticalTable"
												visibleRowCountMode="Auto" 
												enableColumnReordering="true" 
												showColumnVisibilityMenu="false" 
												expandFirstLevel="false"
												selectionMode="single"
												enableColumnFreeze="true" 
												enableCellFilter="true">
                                            <table:columns>
                                                <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.AnalyticalTableColumns" type="XML"/>
                                            </table:columns>
										</table:AnalyticalTable>
									</template:then>
									<template:elseif test="{= ${parameter>/settings/gridTable} &amp;&amp; !${device>/system/phone}}" build:metadata="#ignore">
										<table:Table 
											id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::gridTable"
											enableColumnReordering="true" 
											showColumnVisibilityMenu="false" 
											visibleRowCountMode="Auto"
											selectionMode="{= ${parts: [{path: 'meta>com.sap.vocabularies.UI.v1.LineItem'}, {path: 'parameter>/entitySet'},
												{path: 'parameter>/manifest/sap.ui5/extends/extensions/sap.ui.controllerExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details/sap.ui.generic.app'},
												{path: 'facet>'}, {path: 'listEntitySet>'}, {path: 'parameter>/manifest/sap.ui.generic.app/pages'}],
												formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getSelectionModeGridTable'}}"
											enableColumnFreeze="true" 
											enableCellFilter="true">
                                            <table:columns>
                                                <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.GridTableColumns" type="XML"/>
                                            </table:columns>
										</table:Table>
									</template:elseif>
									<template:else>
										<Table
											id="{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}::responsiveTable"
											fixedLayout="false" growing="true" growingThreshold="10"
											mode="{= ${parts: [{path: 'collection>'}, {path: 'parameter>/entitySet'},
												{path: 'parameter>/manifest/sap.ui5/extends/extensions/sap.ui.controllerExtensions/sap.suite.ui.generic.template.ObjectPage.view.Details/sap.ui.generic.app'},
												{path: 'facet>'}, {path: 'listEntitySet>'}, {path: 'parameter>/manifest/sap.ui.generic.app/pages'}],
												formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getSelectionModeResponsiveTable'}}">
											<core:Fragment
												fragmentName="sap.suite.ui.generic.template.fragments.TableColumns"
												type="XML" />
										</Table>
										</template:else>
									</template:if>
								</template:else>
							</template:if>
						</st:SmartTable>
					</template:with>
				</template:with>
			</template:with>
	</template:with>
</core:FragmentDefinition>